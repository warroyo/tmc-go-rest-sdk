// Code generated by go-swagger; DO NOT EDIT.

package eks_cluster_options

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// EksClusterOptionsListReader is a Reader for the EksClusterOptionsList structure.
type EksClusterOptionsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EksClusterOptionsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEksClusterOptionsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewEksClusterOptionsListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEksClusterOptionsListOK creates a EksClusterOptionsListOK with default headers values
func NewEksClusterOptionsListOK() *EksClusterOptionsListOK {
	return &EksClusterOptionsListOK{}
}

/*
EksClusterOptionsListOK describes a response with status code 200, with default header values.

A successful response.
*/
type EksClusterOptionsListOK struct {
	Payload *models.EksclusterListEksClusterOptionsResponse
}

// IsSuccess returns true when this eks cluster options list o k response has a 2xx status code
func (o *EksClusterOptionsListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this eks cluster options list o k response has a 3xx status code
func (o *EksClusterOptionsListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this eks cluster options list o k response has a 4xx status code
func (o *EksClusterOptionsListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this eks cluster options list o k response has a 5xx status code
func (o *EksClusterOptionsListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this eks cluster options list o k response a status code equal to that given
func (o *EksClusterOptionsListOK) IsCode(code int) bool {
	return code == 200
}

func (o *EksClusterOptionsListOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/eksclusters:options][%d] eksClusterOptionsListOK  %+v", 200, o.Payload)
}

func (o *EksClusterOptionsListOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/eksclusters:options][%d] eksClusterOptionsListOK  %+v", 200, o.Payload)
}

func (o *EksClusterOptionsListOK) GetPayload() *models.EksclusterListEksClusterOptionsResponse {
	return o.Payload
}

func (o *EksClusterOptionsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EksclusterListEksClusterOptionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEksClusterOptionsListDefault creates a EksClusterOptionsListDefault with default headers values
func NewEksClusterOptionsListDefault(code int) *EksClusterOptionsListDefault {
	return &EksClusterOptionsListDefault{
		_statusCode: code,
	}
}

/*
EksClusterOptionsListDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EksClusterOptionsListDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the eks cluster options list default response
func (o *EksClusterOptionsListDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this eks cluster options list default response has a 2xx status code
func (o *EksClusterOptionsListDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this eks cluster options list default response has a 3xx status code
func (o *EksClusterOptionsListDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this eks cluster options list default response has a 4xx status code
func (o *EksClusterOptionsListDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this eks cluster options list default response has a 5xx status code
func (o *EksClusterOptionsListDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this eks cluster options list default response a status code equal to that given
func (o *EksClusterOptionsListDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *EksClusterOptionsListDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/eksclusters:options][%d] EksClusterOptions_List default  %+v", o._statusCode, o.Payload)
}

func (o *EksClusterOptionsListDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/eksclusters:options][%d] EksClusterOptions_List default  %+v", o._statusCode, o.Payload)
}

func (o *EksClusterOptionsListDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *EksClusterOptionsListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
