// Code generated by go-swagger; DO NOT EDIT.

package secret_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// SecretResourceServiceUpdateReader is a Reader for the SecretResourceServiceUpdate structure.
type SecretResourceServiceUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretResourceServiceUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSecretResourceServiceUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSecretResourceServiceUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSecretResourceServiceUpdateOK creates a SecretResourceServiceUpdateOK with default headers values
func NewSecretResourceServiceUpdateOK() *SecretResourceServiceUpdateOK {
	return &SecretResourceServiceUpdateOK{}
}

/*
SecretResourceServiceUpdateOK describes a response with status code 200, with default header values.

A successful response.
*/
type SecretResourceServiceUpdateOK struct {
	Payload *models.ClusterNamespaceSecretUpdateSecretResponse
}

// IsSuccess returns true when this secret resource service update o k response has a 2xx status code
func (o *SecretResourceServiceUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this secret resource service update o k response has a 3xx status code
func (o *SecretResourceServiceUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this secret resource service update o k response has a 4xx status code
func (o *SecretResourceServiceUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this secret resource service update o k response has a 5xx status code
func (o *SecretResourceServiceUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this secret resource service update o k response a status code equal to that given
func (o *SecretResourceServiceUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *SecretResourceServiceUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets/{secret.fullName.name}][%d] secretResourceServiceUpdateOK  %+v", 200, o.Payload)
}

func (o *SecretResourceServiceUpdateOK) String() string {
	return fmt.Sprintf("[PUT /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets/{secret.fullName.name}][%d] secretResourceServiceUpdateOK  %+v", 200, o.Payload)
}

func (o *SecretResourceServiceUpdateOK) GetPayload() *models.ClusterNamespaceSecretUpdateSecretResponse {
	return o.Payload
}

func (o *SecretResourceServiceUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterNamespaceSecretUpdateSecretResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretResourceServiceUpdateDefault creates a SecretResourceServiceUpdateDefault with default headers values
func NewSecretResourceServiceUpdateDefault(code int) *SecretResourceServiceUpdateDefault {
	return &SecretResourceServiceUpdateDefault{
		_statusCode: code,
	}
}

/*
SecretResourceServiceUpdateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SecretResourceServiceUpdateDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the secret resource service update default response
func (o *SecretResourceServiceUpdateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this secret resource service update default response has a 2xx status code
func (o *SecretResourceServiceUpdateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this secret resource service update default response has a 3xx status code
func (o *SecretResourceServiceUpdateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this secret resource service update default response has a 4xx status code
func (o *SecretResourceServiceUpdateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this secret resource service update default response has a 5xx status code
func (o *SecretResourceServiceUpdateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this secret resource service update default response a status code equal to that given
func (o *SecretResourceServiceUpdateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *SecretResourceServiceUpdateDefault) Error() string {
	return fmt.Sprintf("[PUT /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets/{secret.fullName.name}][%d] SecretResourceService_Update default  %+v", o._statusCode, o.Payload)
}

func (o *SecretResourceServiceUpdateDefault) String() string {
	return fmt.Sprintf("[PUT /v1alpha1/clusters/{secret.fullName.clusterName}/namespaces/{secret.fullName.namespaceName}/secrets/{secret.fullName.name}][%d] SecretResourceService_Update default  %+v", o._statusCode, o.Payload)
}

func (o *SecretResourceServiceUpdateDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *SecretResourceServiceUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
