// Code generated by go-swagger; DO NOT EDIT.

package provider_eks_cluster_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// ProviderEksClusterResourceServiceUpdateReader is a Reader for the ProviderEksClusterResourceServiceUpdate structure.
type ProviderEksClusterResourceServiceUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProviderEksClusterResourceServiceUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProviderEksClusterResourceServiceUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewProviderEksClusterResourceServiceUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewProviderEksClusterResourceServiceUpdateOK creates a ProviderEksClusterResourceServiceUpdateOK with default headers values
func NewProviderEksClusterResourceServiceUpdateOK() *ProviderEksClusterResourceServiceUpdateOK {
	return &ProviderEksClusterResourceServiceUpdateOK{}
}

/*
ProviderEksClusterResourceServiceUpdateOK describes a response with status code 200, with default header values.

A successful response.
*/
type ProviderEksClusterResourceServiceUpdateOK struct {
	Payload *models.ManageEksProvidereksclusterUpdateProviderEksClusterResponse
}

// IsSuccess returns true when this provider eks cluster resource service update o k response has a 2xx status code
func (o *ProviderEksClusterResourceServiceUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this provider eks cluster resource service update o k response has a 3xx status code
func (o *ProviderEksClusterResourceServiceUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this provider eks cluster resource service update o k response has a 4xx status code
func (o *ProviderEksClusterResourceServiceUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this provider eks cluster resource service update o k response has a 5xx status code
func (o *ProviderEksClusterResourceServiceUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this provider eks cluster resource service update o k response a status code equal to that given
func (o *ProviderEksClusterResourceServiceUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *ProviderEksClusterResourceServiceUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /v1alpha1/manage/providereksclusters/{providerEksCluster.fullName.name}][%d] providerEksClusterResourceServiceUpdateOK  %+v", 200, o.Payload)
}

func (o *ProviderEksClusterResourceServiceUpdateOK) String() string {
	return fmt.Sprintf("[PUT /v1alpha1/manage/providereksclusters/{providerEksCluster.fullName.name}][%d] providerEksClusterResourceServiceUpdateOK  %+v", 200, o.Payload)
}

func (o *ProviderEksClusterResourceServiceUpdateOK) GetPayload() *models.ManageEksProvidereksclusterUpdateProviderEksClusterResponse {
	return o.Payload
}

func (o *ProviderEksClusterResourceServiceUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ManageEksProvidereksclusterUpdateProviderEksClusterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProviderEksClusterResourceServiceUpdateDefault creates a ProviderEksClusterResourceServiceUpdateDefault with default headers values
func NewProviderEksClusterResourceServiceUpdateDefault(code int) *ProviderEksClusterResourceServiceUpdateDefault {
	return &ProviderEksClusterResourceServiceUpdateDefault{
		_statusCode: code,
	}
}

/*
ProviderEksClusterResourceServiceUpdateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ProviderEksClusterResourceServiceUpdateDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the provider eks cluster resource service update default response
func (o *ProviderEksClusterResourceServiceUpdateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this provider eks cluster resource service update default response has a 2xx status code
func (o *ProviderEksClusterResourceServiceUpdateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this provider eks cluster resource service update default response has a 3xx status code
func (o *ProviderEksClusterResourceServiceUpdateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this provider eks cluster resource service update default response has a 4xx status code
func (o *ProviderEksClusterResourceServiceUpdateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this provider eks cluster resource service update default response has a 5xx status code
func (o *ProviderEksClusterResourceServiceUpdateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this provider eks cluster resource service update default response a status code equal to that given
func (o *ProviderEksClusterResourceServiceUpdateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ProviderEksClusterResourceServiceUpdateDefault) Error() string {
	return fmt.Sprintf("[PUT /v1alpha1/manage/providereksclusters/{providerEksCluster.fullName.name}][%d] ProviderEksClusterResourceService_Update default  %+v", o._statusCode, o.Payload)
}

func (o *ProviderEksClusterResourceServiceUpdateDefault) String() string {
	return fmt.Sprintf("[PUT /v1alpha1/manage/providereksclusters/{providerEksCluster.fullName.name}][%d] ProviderEksClusterResourceService_Update default  %+v", o._statusCode, o.Payload)
}

func (o *ProviderEksClusterResourceServiceUpdateDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *ProviderEksClusterResourceServiceUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
