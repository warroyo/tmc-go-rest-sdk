// Code generated by go-swagger; DO NOT EDIT.

package provider_eks_cluster_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// NewProviderEksClusterResourceServiceUpdateParams creates a new ProviderEksClusterResourceServiceUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewProviderEksClusterResourceServiceUpdateParams() *ProviderEksClusterResourceServiceUpdateParams {
	return &ProviderEksClusterResourceServiceUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewProviderEksClusterResourceServiceUpdateParamsWithTimeout creates a new ProviderEksClusterResourceServiceUpdateParams object
// with the ability to set a timeout on a request.
func NewProviderEksClusterResourceServiceUpdateParamsWithTimeout(timeout time.Duration) *ProviderEksClusterResourceServiceUpdateParams {
	return &ProviderEksClusterResourceServiceUpdateParams{
		timeout: timeout,
	}
}

// NewProviderEksClusterResourceServiceUpdateParamsWithContext creates a new ProviderEksClusterResourceServiceUpdateParams object
// with the ability to set a context for a request.
func NewProviderEksClusterResourceServiceUpdateParamsWithContext(ctx context.Context) *ProviderEksClusterResourceServiceUpdateParams {
	return &ProviderEksClusterResourceServiceUpdateParams{
		Context: ctx,
	}
}

// NewProviderEksClusterResourceServiceUpdateParamsWithHTTPClient creates a new ProviderEksClusterResourceServiceUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewProviderEksClusterResourceServiceUpdateParamsWithHTTPClient(client *http.Client) *ProviderEksClusterResourceServiceUpdateParams {
	return &ProviderEksClusterResourceServiceUpdateParams{
		HTTPClient: client,
	}
}

/*
ProviderEksClusterResourceServiceUpdateParams contains all the parameters to send to the API endpoint

	for the provider eks cluster resource service update operation.

	Typically these are written to a http.Request.
*/
type ProviderEksClusterResourceServiceUpdateParams struct {

	// Body.
	Body *models.ManageEksProvidereksclusterUpdateProviderEksClusterRequest

	/* ProviderEksClusterFullNameName.

	   Name of this cluster in EKS.
	*/
	ProviderEksClusterFullNameName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the provider eks cluster resource service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ProviderEksClusterResourceServiceUpdateParams) WithDefaults() *ProviderEksClusterResourceServiceUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the provider eks cluster resource service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ProviderEksClusterResourceServiceUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) WithTimeout(timeout time.Duration) *ProviderEksClusterResourceServiceUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) WithContext(ctx context.Context) *ProviderEksClusterResourceServiceUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) WithHTTPClient(client *http.Client) *ProviderEksClusterResourceServiceUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) WithBody(body *models.ManageEksProvidereksclusterUpdateProviderEksClusterRequest) *ProviderEksClusterResourceServiceUpdateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) SetBody(body *models.ManageEksProvidereksclusterUpdateProviderEksClusterRequest) {
	o.Body = body
}

// WithProviderEksClusterFullNameName adds the providerEksClusterFullNameName to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) WithProviderEksClusterFullNameName(providerEksClusterFullNameName string) *ProviderEksClusterResourceServiceUpdateParams {
	o.SetProviderEksClusterFullNameName(providerEksClusterFullNameName)
	return o
}

// SetProviderEksClusterFullNameName adds the providerEksClusterFullNameName to the provider eks cluster resource service update params
func (o *ProviderEksClusterResourceServiceUpdateParams) SetProviderEksClusterFullNameName(providerEksClusterFullNameName string) {
	o.ProviderEksClusterFullNameName = providerEksClusterFullNameName
}

// WriteToRequest writes these params to a swagger request
func (o *ProviderEksClusterResourceServiceUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param providerEksCluster.fullName.name
	if err := r.SetPathParam("providerEksCluster.fullName.name", o.ProviderEksClusterFullNameName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
