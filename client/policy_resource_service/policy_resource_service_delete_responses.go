// Code generated by go-swagger; DO NOT EDIT.

package policy_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// PolicyResourceServiceDeleteReader is a Reader for the PolicyResourceServiceDelete structure.
type PolicyResourceServiceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PolicyResourceServiceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPolicyResourceServiceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPolicyResourceServiceDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPolicyResourceServiceDeleteOK creates a PolicyResourceServiceDeleteOK with default headers values
func NewPolicyResourceServiceDeleteOK() *PolicyResourceServiceDeleteOK {
	return &PolicyResourceServiceDeleteOK{}
}

/*
PolicyResourceServiceDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type PolicyResourceServiceDeleteOK struct {
	Payload *models.WorkspacePolicyDeletePolicyResponse
}

// IsSuccess returns true when this policy resource service delete o k response has a 2xx status code
func (o *PolicyResourceServiceDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this policy resource service delete o k response has a 3xx status code
func (o *PolicyResourceServiceDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this policy resource service delete o k response has a 4xx status code
func (o *PolicyResourceServiceDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this policy resource service delete o k response has a 5xx status code
func (o *PolicyResourceServiceDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this policy resource service delete o k response a status code equal to that given
func (o *PolicyResourceServiceDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *PolicyResourceServiceDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v1alpha1/workspaces/{fullName.workspaceName}/policies/{fullName.name}][%d] policyResourceServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *PolicyResourceServiceDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /v1alpha1/workspaces/{fullName.workspaceName}/policies/{fullName.name}][%d] policyResourceServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *PolicyResourceServiceDeleteOK) GetPayload() *models.WorkspacePolicyDeletePolicyResponse {
	return o.Payload
}

func (o *PolicyResourceServiceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkspacePolicyDeletePolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPolicyResourceServiceDeleteDefault creates a PolicyResourceServiceDeleteDefault with default headers values
func NewPolicyResourceServiceDeleteDefault(code int) *PolicyResourceServiceDeleteDefault {
	return &PolicyResourceServiceDeleteDefault{
		_statusCode: code,
	}
}

/*
PolicyResourceServiceDeleteDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PolicyResourceServiceDeleteDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the policy resource service delete default response
func (o *PolicyResourceServiceDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this policy resource service delete default response has a 2xx status code
func (o *PolicyResourceServiceDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this policy resource service delete default response has a 3xx status code
func (o *PolicyResourceServiceDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this policy resource service delete default response has a 4xx status code
func (o *PolicyResourceServiceDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this policy resource service delete default response has a 5xx status code
func (o *PolicyResourceServiceDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this policy resource service delete default response a status code equal to that given
func (o *PolicyResourceServiceDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PolicyResourceServiceDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1alpha1/workspaces/{fullName.workspaceName}/policies/{fullName.name}][%d] PolicyResourceService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *PolicyResourceServiceDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /v1alpha1/workspaces/{fullName.workspaceName}/policies/{fullName.name}][%d] PolicyResourceService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *PolicyResourceServiceDeleteDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *PolicyResourceServiceDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
