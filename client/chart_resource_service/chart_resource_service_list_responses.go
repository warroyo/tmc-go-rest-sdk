// Code generated by go-swagger; DO NOT EDIT.

package chart_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// ChartResourceServiceListReader is a Reader for the ChartResourceServiceList structure.
type ChartResourceServiceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChartResourceServiceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChartResourceServiceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewChartResourceServiceListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChartResourceServiceListOK creates a ChartResourceServiceListOK with default headers values
func NewChartResourceServiceListOK() *ChartResourceServiceListOK {
	return &ChartResourceServiceListOK{}
}

/*
ChartResourceServiceListOK describes a response with status code 200, with default header values.

A successful response.
*/
type ChartResourceServiceListOK struct {
	Payload *models.OrganizationFluxcdHelmRepositoryChartmetadataChartListChartsResponse
}

// IsSuccess returns true when this chart resource service list o k response has a 2xx status code
func (o *ChartResourceServiceListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this chart resource service list o k response has a 3xx status code
func (o *ChartResourceServiceListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this chart resource service list o k response has a 4xx status code
func (o *ChartResourceServiceListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this chart resource service list o k response has a 5xx status code
func (o *ChartResourceServiceListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this chart resource service list o k response a status code equal to that given
func (o *ChartResourceServiceListOK) IsCode(code int) bool {
	return code == 200
}

func (o *ChartResourceServiceListOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas/{searchScope.chartMetadataName}/charts][%d] chartResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *ChartResourceServiceListOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas/{searchScope.chartMetadataName}/charts][%d] chartResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *ChartResourceServiceListOK) GetPayload() *models.OrganizationFluxcdHelmRepositoryChartmetadataChartListChartsResponse {
	return o.Payload
}

func (o *ChartResourceServiceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationFluxcdHelmRepositoryChartmetadataChartListChartsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChartResourceServiceListDefault creates a ChartResourceServiceListDefault with default headers values
func NewChartResourceServiceListDefault(code int) *ChartResourceServiceListDefault {
	return &ChartResourceServiceListDefault{
		_statusCode: code,
	}
}

/*
ChartResourceServiceListDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ChartResourceServiceListDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the chart resource service list default response
func (o *ChartResourceServiceListDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this chart resource service list default response has a 2xx status code
func (o *ChartResourceServiceListDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this chart resource service list default response has a 3xx status code
func (o *ChartResourceServiceListDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this chart resource service list default response has a 4xx status code
func (o *ChartResourceServiceListDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this chart resource service list default response has a 5xx status code
func (o *ChartResourceServiceListDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this chart resource service list default response a status code equal to that given
func (o *ChartResourceServiceListDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ChartResourceServiceListDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas/{searchScope.chartMetadataName}/charts][%d] ChartResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *ChartResourceServiceListDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/fluxcd/helm/repositories/{searchScope.repositoryName}/chartmetadatas/{searchScope.chartMetadataName}/charts][%d] ChartResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *ChartResourceServiceListDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *ChartResourceServiceListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
