// Code generated by go-swagger; DO NOT EDIT.

package solution_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// SolutionResourceServiceDeleteReader is a Reader for the SolutionResourceServiceDelete structure.
type SolutionResourceServiceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SolutionResourceServiceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSolutionResourceServiceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSolutionResourceServiceDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSolutionResourceServiceDeleteOK creates a SolutionResourceServiceDeleteOK with default headers values
func NewSolutionResourceServiceDeleteOK() *SolutionResourceServiceDeleteOK {
	return &SolutionResourceServiceDeleteOK{}
}

/*
SolutionResourceServiceDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type SolutionResourceServiceDeleteOK struct {
	Payload *models.TanzupackageTapSolutionDeleteSolutionResponse
}

// IsSuccess returns true when this solution resource service delete o k response has a 2xx status code
func (o *SolutionResourceServiceDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this solution resource service delete o k response has a 3xx status code
func (o *SolutionResourceServiceDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this solution resource service delete o k response has a 4xx status code
func (o *SolutionResourceServiceDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this solution resource service delete o k response has a 5xx status code
func (o *SolutionResourceServiceDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this solution resource service delete o k response a status code equal to that given
func (o *SolutionResourceServiceDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *SolutionResourceServiceDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /v1alpha1/tanzupackage/tap/solutions/{fullName.name}][%d] solutionResourceServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *SolutionResourceServiceDeleteOK) String() string {
	return fmt.Sprintf("[DELETE /v1alpha1/tanzupackage/tap/solutions/{fullName.name}][%d] solutionResourceServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *SolutionResourceServiceDeleteOK) GetPayload() *models.TanzupackageTapSolutionDeleteSolutionResponse {
	return o.Payload
}

func (o *SolutionResourceServiceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TanzupackageTapSolutionDeleteSolutionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSolutionResourceServiceDeleteDefault creates a SolutionResourceServiceDeleteDefault with default headers values
func NewSolutionResourceServiceDeleteDefault(code int) *SolutionResourceServiceDeleteDefault {
	return &SolutionResourceServiceDeleteDefault{
		_statusCode: code,
	}
}

/*
SolutionResourceServiceDeleteDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type SolutionResourceServiceDeleteDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the solution resource service delete default response
func (o *SolutionResourceServiceDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this solution resource service delete default response has a 2xx status code
func (o *SolutionResourceServiceDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this solution resource service delete default response has a 3xx status code
func (o *SolutionResourceServiceDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this solution resource service delete default response has a 4xx status code
func (o *SolutionResourceServiceDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this solution resource service delete default response has a 5xx status code
func (o *SolutionResourceServiceDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this solution resource service delete default response a status code equal to that given
func (o *SolutionResourceServiceDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *SolutionResourceServiceDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1alpha1/tanzupackage/tap/solutions/{fullName.name}][%d] SolutionResourceService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *SolutionResourceServiceDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /v1alpha1/tanzupackage/tap/solutions/{fullName.name}][%d] SolutionResourceService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *SolutionResourceServiceDeleteDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *SolutionResourceServiceDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
