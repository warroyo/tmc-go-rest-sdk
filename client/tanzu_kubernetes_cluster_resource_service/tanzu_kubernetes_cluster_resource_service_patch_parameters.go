// Code generated by go-swagger; DO NOT EDIT.

package tanzu_kubernetes_cluster_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// NewTanzuKubernetesClusterResourceServicePatchParams creates a new TanzuKubernetesClusterResourceServicePatchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewTanzuKubernetesClusterResourceServicePatchParams() *TanzuKubernetesClusterResourceServicePatchParams {
	return &TanzuKubernetesClusterResourceServicePatchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewTanzuKubernetesClusterResourceServicePatchParamsWithTimeout creates a new TanzuKubernetesClusterResourceServicePatchParams object
// with the ability to set a timeout on a request.
func NewTanzuKubernetesClusterResourceServicePatchParamsWithTimeout(timeout time.Duration) *TanzuKubernetesClusterResourceServicePatchParams {
	return &TanzuKubernetesClusterResourceServicePatchParams{
		timeout: timeout,
	}
}

// NewTanzuKubernetesClusterResourceServicePatchParamsWithContext creates a new TanzuKubernetesClusterResourceServicePatchParams object
// with the ability to set a context for a request.
func NewTanzuKubernetesClusterResourceServicePatchParamsWithContext(ctx context.Context) *TanzuKubernetesClusterResourceServicePatchParams {
	return &TanzuKubernetesClusterResourceServicePatchParams{
		Context: ctx,
	}
}

// NewTanzuKubernetesClusterResourceServicePatchParamsWithHTTPClient creates a new TanzuKubernetesClusterResourceServicePatchParams object
// with the ability to set a custom HTTPClient for a request.
func NewTanzuKubernetesClusterResourceServicePatchParamsWithHTTPClient(client *http.Client) *TanzuKubernetesClusterResourceServicePatchParams {
	return &TanzuKubernetesClusterResourceServicePatchParams{
		HTTPClient: client,
	}
}

/*
TanzuKubernetesClusterResourceServicePatchParams contains all the parameters to send to the API endpoint

	for the tanzu kubernetes cluster resource service patch operation.

	Typically these are written to a http.Request.
*/
type TanzuKubernetesClusterResourceServicePatchParams struct {

	// Body.
	Body *models.ManagementclusterProvisionerTanzukubernetesclusterPatchTanzuKubernetesClusterRequest

	/* FullNameManagementClusterName.

	   Name of the management cluster.
	*/
	FullNameManagementClusterName string

	/* FullNameName.

	   Name of this cluster.
	*/
	FullNameName string

	/* FullNameProvisionerName.

	   Provisioner of the cluster.
	*/
	FullNameProvisionerName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the tanzu kubernetes cluster resource service patch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithDefaults() *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the tanzu kubernetes cluster resource service patch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithTimeout(timeout time.Duration) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithContext(ctx context.Context) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithHTTPClient(client *http.Client) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithBody(body *models.ManagementclusterProvisionerTanzukubernetesclusterPatchTanzuKubernetesClusterRequest) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetBody(body *models.ManagementclusterProvisionerTanzukubernetesclusterPatchTanzuKubernetesClusterRequest) {
	o.Body = body
}

// WithFullNameManagementClusterName adds the fullNameManagementClusterName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithFullNameManagementClusterName(fullNameManagementClusterName string) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetFullNameManagementClusterName(fullNameManagementClusterName)
	return o
}

// SetFullNameManagementClusterName adds the fullNameManagementClusterName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetFullNameManagementClusterName(fullNameManagementClusterName string) {
	o.FullNameManagementClusterName = fullNameManagementClusterName
}

// WithFullNameName adds the fullNameName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithFullNameName(fullNameName string) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetFullNameName(fullNameName)
	return o
}

// SetFullNameName adds the fullNameName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetFullNameName(fullNameName string) {
	o.FullNameName = fullNameName
}

// WithFullNameProvisionerName adds the fullNameProvisionerName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) WithFullNameProvisionerName(fullNameProvisionerName string) *TanzuKubernetesClusterResourceServicePatchParams {
	o.SetFullNameProvisionerName(fullNameProvisionerName)
	return o
}

// SetFullNameProvisionerName adds the fullNameProvisionerName to the tanzu kubernetes cluster resource service patch params
func (o *TanzuKubernetesClusterResourceServicePatchParams) SetFullNameProvisionerName(fullNameProvisionerName string) {
	o.FullNameProvisionerName = fullNameProvisionerName
}

// WriteToRequest writes these params to a swagger request
func (o *TanzuKubernetesClusterResourceServicePatchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param fullName.managementClusterName
	if err := r.SetPathParam("fullName.managementClusterName", o.FullNameManagementClusterName); err != nil {
		return err
	}

	// path param fullName.name
	if err := r.SetPathParam("fullName.name", o.FullNameName); err != nil {
		return err
	}

	// path param fullName.provisionerName
	if err := r.SetPathParam("fullName.provisionerName", o.FullNameProvisionerName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
