// Code generated by go-swagger; DO NOT EDIT.

package tanzu_package_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// TanzuPackageResourceServiceListReader is a Reader for the TanzuPackageResourceServiceList structure.
type TanzuPackageResourceServiceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TanzuPackageResourceServiceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTanzuPackageResourceServiceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewTanzuPackageResourceServiceListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTanzuPackageResourceServiceListOK creates a TanzuPackageResourceServiceListOK with default headers values
func NewTanzuPackageResourceServiceListOK() *TanzuPackageResourceServiceListOK {
	return &TanzuPackageResourceServiceListOK{}
}

/*
TanzuPackageResourceServiceListOK describes a response with status code 200, with default header values.

A successful response.
*/
type TanzuPackageResourceServiceListOK struct {
	Payload *models.ClusterTanzupackageListTanzuPackagesResponse
}

// IsSuccess returns true when this tanzu package resource service list o k response has a 2xx status code
func (o *TanzuPackageResourceServiceListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this tanzu package resource service list o k response has a 3xx status code
func (o *TanzuPackageResourceServiceListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this tanzu package resource service list o k response has a 4xx status code
func (o *TanzuPackageResourceServiceListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this tanzu package resource service list o k response has a 5xx status code
func (o *TanzuPackageResourceServiceListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this tanzu package resource service list o k response a status code equal to that given
func (o *TanzuPackageResourceServiceListOK) IsCode(code int) bool {
	return code == 200
}

func (o *TanzuPackageResourceServiceListOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/clusters/{searchScope.clusterName}/tanzupackage][%d] tanzuPackageResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *TanzuPackageResourceServiceListOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/clusters/{searchScope.clusterName}/tanzupackage][%d] tanzuPackageResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *TanzuPackageResourceServiceListOK) GetPayload() *models.ClusterTanzupackageListTanzuPackagesResponse {
	return o.Payload
}

func (o *TanzuPackageResourceServiceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterTanzupackageListTanzuPackagesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTanzuPackageResourceServiceListDefault creates a TanzuPackageResourceServiceListDefault with default headers values
func NewTanzuPackageResourceServiceListDefault(code int) *TanzuPackageResourceServiceListDefault {
	return &TanzuPackageResourceServiceListDefault{
		_statusCode: code,
	}
}

/*
TanzuPackageResourceServiceListDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type TanzuPackageResourceServiceListDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the tanzu package resource service list default response
func (o *TanzuPackageResourceServiceListDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this tanzu package resource service list default response has a 2xx status code
func (o *TanzuPackageResourceServiceListDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this tanzu package resource service list default response has a 3xx status code
func (o *TanzuPackageResourceServiceListDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this tanzu package resource service list default response has a 4xx status code
func (o *TanzuPackageResourceServiceListDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this tanzu package resource service list default response has a 5xx status code
func (o *TanzuPackageResourceServiceListDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this tanzu package resource service list default response a status code equal to that given
func (o *TanzuPackageResourceServiceListDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *TanzuPackageResourceServiceListDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/clusters/{searchScope.clusterName}/tanzupackage][%d] TanzuPackageResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *TanzuPackageResourceServiceListDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/clusters/{searchScope.clusterName}/tanzupackage][%d] TanzuPackageResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *TanzuPackageResourceServiceListDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *TanzuPackageResourceServiceListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
