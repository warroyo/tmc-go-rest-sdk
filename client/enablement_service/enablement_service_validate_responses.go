// Code generated by go-swagger; DO NOT EDIT.

package enablement_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// EnablementServiceValidateReader is a Reader for the EnablementServiceValidate structure.
type EnablementServiceValidateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnablementServiceValidateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEnablementServiceValidateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewEnablementServiceValidateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEnablementServiceValidateOK creates a EnablementServiceValidateOK with default headers values
func NewEnablementServiceValidateOK() *EnablementServiceValidateOK {
	return &EnablementServiceValidateOK{}
}

/*
EnablementServiceValidateOK describes a response with status code 200, with default header values.

A successful response.
*/
type EnablementServiceValidateOK struct {
	Payload *models.OrganizationIntegrationEnablementValidateResponse
}

// IsSuccess returns true when this enablement service validate o k response has a 2xx status code
func (o *EnablementServiceValidateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this enablement service validate o k response has a 3xx status code
func (o *EnablementServiceValidateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this enablement service validate o k response has a 4xx status code
func (o *EnablementServiceValidateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this enablement service validate o k response has a 5xx status code
func (o *EnablementServiceValidateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this enablement service validate o k response a status code equal to that given
func (o *EnablementServiceValidateOK) IsCode(code int) bool {
	return code == 200
}

func (o *EnablementServiceValidateOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/integration/enablement/validate][%d] enablementServiceValidateOK  %+v", 200, o.Payload)
}

func (o *EnablementServiceValidateOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/integration/enablement/validate][%d] enablementServiceValidateOK  %+v", 200, o.Payload)
}

func (o *EnablementServiceValidateOK) GetPayload() *models.OrganizationIntegrationEnablementValidateResponse {
	return o.Payload
}

func (o *EnablementServiceValidateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrganizationIntegrationEnablementValidateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnablementServiceValidateDefault creates a EnablementServiceValidateDefault with default headers values
func NewEnablementServiceValidateDefault(code int) *EnablementServiceValidateDefault {
	return &EnablementServiceValidateDefault{
		_statusCode: code,
	}
}

/*
EnablementServiceValidateDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type EnablementServiceValidateDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the enablement service validate default response
func (o *EnablementServiceValidateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this enablement service validate default response has a 2xx status code
func (o *EnablementServiceValidateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this enablement service validate default response has a 3xx status code
func (o *EnablementServiceValidateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this enablement service validate default response has a 4xx status code
func (o *EnablementServiceValidateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this enablement service validate default response has a 5xx status code
func (o *EnablementServiceValidateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this enablement service validate default response a status code equal to that given
func (o *EnablementServiceValidateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *EnablementServiceValidateDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/integration/enablement/validate][%d] EnablementService_Validate default  %+v", o._statusCode, o.Payload)
}

func (o *EnablementServiceValidateDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/organization/integration/enablement/validate][%d] EnablementService_Validate default  %+v", o._statusCode, o.Payload)
}

func (o *EnablementServiceValidateDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *EnablementServiceValidateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
