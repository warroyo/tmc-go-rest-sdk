// Code generated by go-swagger; DO NOT EDIT.

package permission_template_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// PermissionTemplateServiceGetReader is a Reader for the PermissionTemplateServiceGet structure.
type PermissionTemplateServiceGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PermissionTemplateServiceGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPermissionTemplateServiceGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPermissionTemplateServiceGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPermissionTemplateServiceGetOK creates a PermissionTemplateServiceGetOK with default headers values
func NewPermissionTemplateServiceGetOK() *PermissionTemplateServiceGetOK {
	return &PermissionTemplateServiceGetOK{}
}

/*
PermissionTemplateServiceGetOK describes a response with status code 200, with default header values.

A successful response.
*/
type PermissionTemplateServiceGetOK struct {
	Payload *models.AccountManagementclusterProvisionerCredentialGetPermissionTemplateResponse
}

// IsSuccess returns true when this permission template service get o k response has a 2xx status code
func (o *PermissionTemplateServiceGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this permission template service get o k response has a 3xx status code
func (o *PermissionTemplateServiceGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this permission template service get o k response has a 4xx status code
func (o *PermissionTemplateServiceGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this permission template service get o k response has a 5xx status code
func (o *PermissionTemplateServiceGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this permission template service get o k response a status code equal to that given
func (o *PermissionTemplateServiceGetOK) IsCode(code int) bool {
	return code == 200
}

func (o *PermissionTemplateServiceGetOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate/{fullName.name}][%d] permissionTemplateServiceGetOK  %+v", 200, o.Payload)
}

func (o *PermissionTemplateServiceGetOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate/{fullName.name}][%d] permissionTemplateServiceGetOK  %+v", 200, o.Payload)
}

func (o *PermissionTemplateServiceGetOK) GetPayload() *models.AccountManagementclusterProvisionerCredentialGetPermissionTemplateResponse {
	return o.Payload
}

func (o *PermissionTemplateServiceGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountManagementclusterProvisionerCredentialGetPermissionTemplateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPermissionTemplateServiceGetDefault creates a PermissionTemplateServiceGetDefault with default headers values
func NewPermissionTemplateServiceGetDefault(code int) *PermissionTemplateServiceGetDefault {
	return &PermissionTemplateServiceGetDefault{
		_statusCode: code,
	}
}

/*
PermissionTemplateServiceGetDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PermissionTemplateServiceGetDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the permission template service get default response
func (o *PermissionTemplateServiceGetDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this permission template service get default response has a 2xx status code
func (o *PermissionTemplateServiceGetDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this permission template service get default response has a 3xx status code
func (o *PermissionTemplateServiceGetDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this permission template service get default response has a 4xx status code
func (o *PermissionTemplateServiceGetDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this permission template service get default response has a 5xx status code
func (o *PermissionTemplateServiceGetDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this permission template service get default response a status code equal to that given
func (o *PermissionTemplateServiceGetDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PermissionTemplateServiceGetDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate/{fullName.name}][%d] PermissionTemplateService_Get default  %+v", o._statusCode, o.Payload)
}

func (o *PermissionTemplateServiceGetDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials:permissiontemplate/{fullName.name}][%d] PermissionTemplateService_Get default  %+v", o._statusCode, o.Payload)
}

func (o *PermissionTemplateServiceGetDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *PermissionTemplateServiceGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
