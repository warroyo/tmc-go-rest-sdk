// Code generated by go-swagger; DO NOT EDIT.

package backup_location_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// NewBackupLocationResourceServiceUpdateParams creates a new BackupLocationResourceServiceUpdateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBackupLocationResourceServiceUpdateParams() *BackupLocationResourceServiceUpdateParams {
	return &BackupLocationResourceServiceUpdateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBackupLocationResourceServiceUpdateParamsWithTimeout creates a new BackupLocationResourceServiceUpdateParams object
// with the ability to set a timeout on a request.
func NewBackupLocationResourceServiceUpdateParamsWithTimeout(timeout time.Duration) *BackupLocationResourceServiceUpdateParams {
	return &BackupLocationResourceServiceUpdateParams{
		timeout: timeout,
	}
}

// NewBackupLocationResourceServiceUpdateParamsWithContext creates a new BackupLocationResourceServiceUpdateParams object
// with the ability to set a context for a request.
func NewBackupLocationResourceServiceUpdateParamsWithContext(ctx context.Context) *BackupLocationResourceServiceUpdateParams {
	return &BackupLocationResourceServiceUpdateParams{
		Context: ctx,
	}
}

// NewBackupLocationResourceServiceUpdateParamsWithHTTPClient creates a new BackupLocationResourceServiceUpdateParams object
// with the ability to set a custom HTTPClient for a request.
func NewBackupLocationResourceServiceUpdateParamsWithHTTPClient(client *http.Client) *BackupLocationResourceServiceUpdateParams {
	return &BackupLocationResourceServiceUpdateParams{
		HTTPClient: client,
	}
}

/*
BackupLocationResourceServiceUpdateParams contains all the parameters to send to the API endpoint

	for the backup location resource service update operation.

	Typically these are written to a http.Request.
*/
type BackupLocationResourceServiceUpdateParams struct {

	/* BackupLocationFullNameName.

	   Name of the Backup Location.
	*/
	BackupLocationFullNameName string

	/* BackupLocationFullNameProviderName.

	   Name of the data protection provider name.
	*/
	BackupLocationFullNameProviderName string

	// Body.
	Body *models.DataprotectionProviderBackuplocationUpdateBackupLocationRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the backup location resource service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BackupLocationResourceServiceUpdateParams) WithDefaults() *BackupLocationResourceServiceUpdateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the backup location resource service update params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BackupLocationResourceServiceUpdateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithTimeout(timeout time.Duration) *BackupLocationResourceServiceUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithContext(ctx context.Context) *BackupLocationResourceServiceUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithHTTPClient(client *http.Client) *BackupLocationResourceServiceUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBackupLocationFullNameName adds the backupLocationFullNameName to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithBackupLocationFullNameName(backupLocationFullNameName string) *BackupLocationResourceServiceUpdateParams {
	o.SetBackupLocationFullNameName(backupLocationFullNameName)
	return o
}

// SetBackupLocationFullNameName adds the backupLocationFullNameName to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetBackupLocationFullNameName(backupLocationFullNameName string) {
	o.BackupLocationFullNameName = backupLocationFullNameName
}

// WithBackupLocationFullNameProviderName adds the backupLocationFullNameProviderName to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithBackupLocationFullNameProviderName(backupLocationFullNameProviderName string) *BackupLocationResourceServiceUpdateParams {
	o.SetBackupLocationFullNameProviderName(backupLocationFullNameProviderName)
	return o
}

// SetBackupLocationFullNameProviderName adds the backupLocationFullNameProviderName to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetBackupLocationFullNameProviderName(backupLocationFullNameProviderName string) {
	o.BackupLocationFullNameProviderName = backupLocationFullNameProviderName
}

// WithBody adds the body to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) WithBody(body *models.DataprotectionProviderBackuplocationUpdateBackupLocationRequest) *BackupLocationResourceServiceUpdateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the backup location resource service update params
func (o *BackupLocationResourceServiceUpdateParams) SetBody(body *models.DataprotectionProviderBackuplocationUpdateBackupLocationRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *BackupLocationResourceServiceUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param backupLocation.fullName.name
	if err := r.SetPathParam("backupLocation.fullName.name", o.BackupLocationFullNameName); err != nil {
		return err
	}

	// path param backupLocation.fullName.providerName
	if err := r.SetPathParam("backupLocation.fullName.providerName", o.BackupLocationFullNameProviderName); err != nil {
		return err
	}
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
