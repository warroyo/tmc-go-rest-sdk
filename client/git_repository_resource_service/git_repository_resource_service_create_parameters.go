// Code generated by go-swagger; DO NOT EDIT.

package git_repository_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// NewGitRepositoryResourceServiceCreateParams creates a new GitRepositoryResourceServiceCreateParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGitRepositoryResourceServiceCreateParams() *GitRepositoryResourceServiceCreateParams {
	return &GitRepositoryResourceServiceCreateParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGitRepositoryResourceServiceCreateParamsWithTimeout creates a new GitRepositoryResourceServiceCreateParams object
// with the ability to set a timeout on a request.
func NewGitRepositoryResourceServiceCreateParamsWithTimeout(timeout time.Duration) *GitRepositoryResourceServiceCreateParams {
	return &GitRepositoryResourceServiceCreateParams{
		timeout: timeout,
	}
}

// NewGitRepositoryResourceServiceCreateParamsWithContext creates a new GitRepositoryResourceServiceCreateParams object
// with the ability to set a context for a request.
func NewGitRepositoryResourceServiceCreateParamsWithContext(ctx context.Context) *GitRepositoryResourceServiceCreateParams {
	return &GitRepositoryResourceServiceCreateParams{
		Context: ctx,
	}
}

// NewGitRepositoryResourceServiceCreateParamsWithHTTPClient creates a new GitRepositoryResourceServiceCreateParams object
// with the ability to set a custom HTTPClient for a request.
func NewGitRepositoryResourceServiceCreateParamsWithHTTPClient(client *http.Client) *GitRepositoryResourceServiceCreateParams {
	return &GitRepositoryResourceServiceCreateParams{
		HTTPClient: client,
	}
}

/*
GitRepositoryResourceServiceCreateParams contains all the parameters to send to the API endpoint

	for the git repository resource service create operation.

	Typically these are written to a http.Request.
*/
type GitRepositoryResourceServiceCreateParams struct {

	// Body.
	Body *models.ClusterNamespaceFluxcdGitrepositoryCreateGitRepositoryRequest

	/* GitRepositoryFullNameClusterName.

	   Name of Cluster.
	*/
	GitRepositoryFullNameClusterName string

	/* GitRepositoryFullNameNamespaceName.

	   Name of Namespace.
	*/
	GitRepositoryFullNameNamespaceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the git repository resource service create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GitRepositoryResourceServiceCreateParams) WithDefaults() *GitRepositoryResourceServiceCreateParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the git repository resource service create params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GitRepositoryResourceServiceCreateParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithTimeout(timeout time.Duration) *GitRepositoryResourceServiceCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithContext(ctx context.Context) *GitRepositoryResourceServiceCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithHTTPClient(client *http.Client) *GitRepositoryResourceServiceCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithBody(body *models.ClusterNamespaceFluxcdGitrepositoryCreateGitRepositoryRequest) *GitRepositoryResourceServiceCreateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetBody(body *models.ClusterNamespaceFluxcdGitrepositoryCreateGitRepositoryRequest) {
	o.Body = body
}

// WithGitRepositoryFullNameClusterName adds the gitRepositoryFullNameClusterName to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithGitRepositoryFullNameClusterName(gitRepositoryFullNameClusterName string) *GitRepositoryResourceServiceCreateParams {
	o.SetGitRepositoryFullNameClusterName(gitRepositoryFullNameClusterName)
	return o
}

// SetGitRepositoryFullNameClusterName adds the gitRepositoryFullNameClusterName to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetGitRepositoryFullNameClusterName(gitRepositoryFullNameClusterName string) {
	o.GitRepositoryFullNameClusterName = gitRepositoryFullNameClusterName
}

// WithGitRepositoryFullNameNamespaceName adds the gitRepositoryFullNameNamespaceName to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) WithGitRepositoryFullNameNamespaceName(gitRepositoryFullNameNamespaceName string) *GitRepositoryResourceServiceCreateParams {
	o.SetGitRepositoryFullNameNamespaceName(gitRepositoryFullNameNamespaceName)
	return o
}

// SetGitRepositoryFullNameNamespaceName adds the gitRepositoryFullNameNamespaceName to the git repository resource service create params
func (o *GitRepositoryResourceServiceCreateParams) SetGitRepositoryFullNameNamespaceName(gitRepositoryFullNameNamespaceName string) {
	o.GitRepositoryFullNameNamespaceName = gitRepositoryFullNameNamespaceName
}

// WriteToRequest writes these params to a swagger request
func (o *GitRepositoryResourceServiceCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param gitRepository.fullName.clusterName
	if err := r.SetPathParam("gitRepository.fullName.clusterName", o.GitRepositoryFullNameClusterName); err != nil {
		return err
	}

	// path param gitRepository.fullName.namespaceName
	if err := r.SetPathParam("gitRepository.fullName.namespaceName", o.GitRepositoryFullNameNamespaceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
