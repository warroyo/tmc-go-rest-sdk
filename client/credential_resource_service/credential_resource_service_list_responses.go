// Code generated by go-swagger; DO NOT EDIT.

package credential_resource_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// CredentialResourceServiceListReader is a Reader for the CredentialResourceServiceList structure.
type CredentialResourceServiceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CredentialResourceServiceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCredentialResourceServiceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCredentialResourceServiceListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCredentialResourceServiceListOK creates a CredentialResourceServiceListOK with default headers values
func NewCredentialResourceServiceListOK() *CredentialResourceServiceListOK {
	return &CredentialResourceServiceListOK{}
}

/*
CredentialResourceServiceListOK describes a response with status code 200, with default header values.

A successful response.
*/
type CredentialResourceServiceListOK struct {
	Payload *models.AccountManagementclusterProvisionerCredentialListCredentialsResponse
}

// IsSuccess returns true when this credential resource service list o k response has a 2xx status code
func (o *CredentialResourceServiceListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this credential resource service list o k response has a 3xx status code
func (o *CredentialResourceServiceListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this credential resource service list o k response has a 4xx status code
func (o *CredentialResourceServiceListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this credential resource service list o k response has a 5xx status code
func (o *CredentialResourceServiceListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this credential resource service list o k response a status code equal to that given
func (o *CredentialResourceServiceListOK) IsCode(code int) bool {
	return code == 200
}

func (o *CredentialResourceServiceListOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials][%d] credentialResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *CredentialResourceServiceListOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials][%d] credentialResourceServiceListOK  %+v", 200, o.Payload)
}

func (o *CredentialResourceServiceListOK) GetPayload() *models.AccountManagementclusterProvisionerCredentialListCredentialsResponse {
	return o.Payload
}

func (o *CredentialResourceServiceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountManagementclusterProvisionerCredentialListCredentialsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCredentialResourceServiceListDefault creates a CredentialResourceServiceListDefault with default headers values
func NewCredentialResourceServiceListDefault(code int) *CredentialResourceServiceListDefault {
	return &CredentialResourceServiceListDefault{
		_statusCode: code,
	}
}

/*
CredentialResourceServiceListDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type CredentialResourceServiceListDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the credential resource service list default response
func (o *CredentialResourceServiceListDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this credential resource service list default response has a 2xx status code
func (o *CredentialResourceServiceListDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this credential resource service list default response has a 3xx status code
func (o *CredentialResourceServiceListDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this credential resource service list default response has a 4xx status code
func (o *CredentialResourceServiceListDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this credential resource service list default response has a 5xx status code
func (o *CredentialResourceServiceListDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this credential resource service list default response a status code equal to that given
func (o *CredentialResourceServiceListDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CredentialResourceServiceListDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials][%d] CredentialResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *CredentialResourceServiceListDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/account/managementcluster/provisioner/credentials][%d] CredentialResourceService_List default  %+v", o._statusCode, o.Payload)
}

func (o *CredentialResourceServiceListDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *CredentialResourceServiceListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
