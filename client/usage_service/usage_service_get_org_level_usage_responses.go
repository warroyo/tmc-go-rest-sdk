// Code generated by go-swagger; DO NOT EDIT.

package usage_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// UsageServiceGetOrgLevelUsageReader is a Reader for the UsageServiceGetOrgLevelUsage structure.
type UsageServiceGetOrgLevelUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsageServiceGetOrgLevelUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUsageServiceGetOrgLevelUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUsageServiceGetOrgLevelUsageDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUsageServiceGetOrgLevelUsageOK creates a UsageServiceGetOrgLevelUsageOK with default headers values
func NewUsageServiceGetOrgLevelUsageOK() *UsageServiceGetOrgLevelUsageOK {
	return &UsageServiceGetOrgLevelUsageOK{}
}

/*
UsageServiceGetOrgLevelUsageOK describes a response with status code 200, with default header values.

A successful response.
*/
type UsageServiceGetOrgLevelUsageOK struct {
	Payload *models.MeteringUsageGetOrgUsageResponse
}

// IsSuccess returns true when this usage service get org level usage o k response has a 2xx status code
func (o *UsageServiceGetOrgLevelUsageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this usage service get org level usage o k response has a 3xx status code
func (o *UsageServiceGetOrgLevelUsageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this usage service get org level usage o k response has a 4xx status code
func (o *UsageServiceGetOrgLevelUsageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this usage service get org level usage o k response has a 5xx status code
func (o *UsageServiceGetOrgLevelUsageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this usage service get org level usage o k response a status code equal to that given
func (o *UsageServiceGetOrgLevelUsageOK) IsCode(code int) bool {
	return code == 200
}

func (o *UsageServiceGetOrgLevelUsageOK) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/metering/usage/org][%d] usageServiceGetOrgLevelUsageOK  %+v", 200, o.Payload)
}

func (o *UsageServiceGetOrgLevelUsageOK) String() string {
	return fmt.Sprintf("[GET /v1alpha1/metering/usage/org][%d] usageServiceGetOrgLevelUsageOK  %+v", 200, o.Payload)
}

func (o *UsageServiceGetOrgLevelUsageOK) GetPayload() *models.MeteringUsageGetOrgUsageResponse {
	return o.Payload
}

func (o *UsageServiceGetOrgLevelUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeteringUsageGetOrgUsageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUsageServiceGetOrgLevelUsageDefault creates a UsageServiceGetOrgLevelUsageDefault with default headers values
func NewUsageServiceGetOrgLevelUsageDefault(code int) *UsageServiceGetOrgLevelUsageDefault {
	return &UsageServiceGetOrgLevelUsageDefault{
		_statusCode: code,
	}
}

/*
UsageServiceGetOrgLevelUsageDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type UsageServiceGetOrgLevelUsageDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the usage service get org level usage default response
func (o *UsageServiceGetOrgLevelUsageDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this usage service get org level usage default response has a 2xx status code
func (o *UsageServiceGetOrgLevelUsageDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this usage service get org level usage default response has a 3xx status code
func (o *UsageServiceGetOrgLevelUsageDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this usage service get org level usage default response has a 4xx status code
func (o *UsageServiceGetOrgLevelUsageDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this usage service get org level usage default response has a 5xx status code
func (o *UsageServiceGetOrgLevelUsageDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this usage service get org level usage default response a status code equal to that given
func (o *UsageServiceGetOrgLevelUsageDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *UsageServiceGetOrgLevelUsageDefault) Error() string {
	return fmt.Sprintf("[GET /v1alpha1/metering/usage/org][%d] UsageService_GetOrgLevelUsage default  %+v", o._statusCode, o.Payload)
}

func (o *UsageServiceGetOrgLevelUsageDefault) String() string {
	return fmt.Sprintf("[GET /v1alpha1/metering/usage/org][%d] UsageService_GetOrgLevelUsage default  %+v", o._statusCode, o.Payload)
}

func (o *UsageServiceGetOrgLevelUsageDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *UsageServiceGetOrgLevelUsageDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
