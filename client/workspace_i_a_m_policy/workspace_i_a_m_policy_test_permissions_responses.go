// Code generated by go-swagger; DO NOT EDIT.

package workspace_i_a_m_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// WorkspaceIAMPolicyTestPermissionsReader is a Reader for the WorkspaceIAMPolicyTestPermissions structure.
type WorkspaceIAMPolicyTestPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkspaceIAMPolicyTestPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkspaceIAMPolicyTestPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewWorkspaceIAMPolicyTestPermissionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewWorkspaceIAMPolicyTestPermissionsOK creates a WorkspaceIAMPolicyTestPermissionsOK with default headers values
func NewWorkspaceIAMPolicyTestPermissionsOK() *WorkspaceIAMPolicyTestPermissionsOK {
	return &WorkspaceIAMPolicyTestPermissionsOK{}
}

/*
WorkspaceIAMPolicyTestPermissionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type WorkspaceIAMPolicyTestPermissionsOK struct {
	Payload *models.WorkspaceTestWorkspaceIAMPermissionsResponse
}

// IsSuccess returns true when this workspace i a m policy test permissions o k response has a 2xx status code
func (o *WorkspaceIAMPolicyTestPermissionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workspace i a m policy test permissions o k response has a 3xx status code
func (o *WorkspaceIAMPolicyTestPermissionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace i a m policy test permissions o k response has a 4xx status code
func (o *WorkspaceIAMPolicyTestPermissionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workspace i a m policy test permissions o k response has a 5xx status code
func (o *WorkspaceIAMPolicyTestPermissionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace i a m policy test permissions o k response a status code equal to that given
func (o *WorkspaceIAMPolicyTestPermissionsOK) IsCode(code int) bool {
	return code == 200
}

func (o *WorkspaceIAMPolicyTestPermissionsOK) Error() string {
	return fmt.Sprintf("[POST /v1alpha1/workspaces:iam/{fullName.name}/testPermissions][%d] workspaceIAMPolicyTestPermissionsOK  %+v", 200, o.Payload)
}

func (o *WorkspaceIAMPolicyTestPermissionsOK) String() string {
	return fmt.Sprintf("[POST /v1alpha1/workspaces:iam/{fullName.name}/testPermissions][%d] workspaceIAMPolicyTestPermissionsOK  %+v", 200, o.Payload)
}

func (o *WorkspaceIAMPolicyTestPermissionsOK) GetPayload() *models.WorkspaceTestWorkspaceIAMPermissionsResponse {
	return o.Payload
}

func (o *WorkspaceIAMPolicyTestPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkspaceTestWorkspaceIAMPermissionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkspaceIAMPolicyTestPermissionsDefault creates a WorkspaceIAMPolicyTestPermissionsDefault with default headers values
func NewWorkspaceIAMPolicyTestPermissionsDefault(code int) *WorkspaceIAMPolicyTestPermissionsDefault {
	return &WorkspaceIAMPolicyTestPermissionsDefault{
		_statusCode: code,
	}
}

/*
WorkspaceIAMPolicyTestPermissionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type WorkspaceIAMPolicyTestPermissionsDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the workspace i a m policy test permissions default response
func (o *WorkspaceIAMPolicyTestPermissionsDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this workspace i a m policy test permissions default response has a 2xx status code
func (o *WorkspaceIAMPolicyTestPermissionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this workspace i a m policy test permissions default response has a 3xx status code
func (o *WorkspaceIAMPolicyTestPermissionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this workspace i a m policy test permissions default response has a 4xx status code
func (o *WorkspaceIAMPolicyTestPermissionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this workspace i a m policy test permissions default response has a 5xx status code
func (o *WorkspaceIAMPolicyTestPermissionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this workspace i a m policy test permissions default response a status code equal to that given
func (o *WorkspaceIAMPolicyTestPermissionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *WorkspaceIAMPolicyTestPermissionsDefault) Error() string {
	return fmt.Sprintf("[POST /v1alpha1/workspaces:iam/{fullName.name}/testPermissions][%d] WorkspaceIAMPolicy_TestPermissions default  %+v", o._statusCode, o.Payload)
}

func (o *WorkspaceIAMPolicyTestPermissionsDefault) String() string {
	return fmt.Sprintf("[POST /v1alpha1/workspaces:iam/{fullName.name}/testPermissions][%d] WorkspaceIAMPolicy_TestPermissions default  %+v", o._statusCode, o.Payload)
}

func (o *WorkspaceIAMPolicyTestPermissionsDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *WorkspaceIAMPolicyTestPermissionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
