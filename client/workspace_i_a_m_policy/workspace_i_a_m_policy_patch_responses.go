// Code generated by go-swagger; DO NOT EDIT.

package workspace_i_a_m_policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/warroyo/tmc-go-rest-sdk/models"
)

// WorkspaceIAMPolicyPatchReader is a Reader for the WorkspaceIAMPolicyPatch structure.
type WorkspaceIAMPolicyPatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *WorkspaceIAMPolicyPatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewWorkspaceIAMPolicyPatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewWorkspaceIAMPolicyPatchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewWorkspaceIAMPolicyPatchOK creates a WorkspaceIAMPolicyPatchOK with default headers values
func NewWorkspaceIAMPolicyPatchOK() *WorkspaceIAMPolicyPatchOK {
	return &WorkspaceIAMPolicyPatchOK{}
}

/*
WorkspaceIAMPolicyPatchOK describes a response with status code 200, with default header values.

A successful response.
*/
type WorkspaceIAMPolicyPatchOK struct {
	Payload *models.WorkspacePatchWorkspaceIAMPolicyResponse
}

// IsSuccess returns true when this workspace i a m policy patch o k response has a 2xx status code
func (o *WorkspaceIAMPolicyPatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this workspace i a m policy patch o k response has a 3xx status code
func (o *WorkspaceIAMPolicyPatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this workspace i a m policy patch o k response has a 4xx status code
func (o *WorkspaceIAMPolicyPatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this workspace i a m policy patch o k response has a 5xx status code
func (o *WorkspaceIAMPolicyPatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this workspace i a m policy patch o k response a status code equal to that given
func (o *WorkspaceIAMPolicyPatchOK) IsCode(code int) bool {
	return code == 200
}

func (o *WorkspaceIAMPolicyPatchOK) Error() string {
	return fmt.Sprintf("[PATCH /v1alpha1/workspaces:iam/{fullName.name}][%d] workspaceIAMPolicyPatchOK  %+v", 200, o.Payload)
}

func (o *WorkspaceIAMPolicyPatchOK) String() string {
	return fmt.Sprintf("[PATCH /v1alpha1/workspaces:iam/{fullName.name}][%d] workspaceIAMPolicyPatchOK  %+v", 200, o.Payload)
}

func (o *WorkspaceIAMPolicyPatchOK) GetPayload() *models.WorkspacePatchWorkspaceIAMPolicyResponse {
	return o.Payload
}

func (o *WorkspaceIAMPolicyPatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkspacePatchWorkspaceIAMPolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewWorkspaceIAMPolicyPatchDefault creates a WorkspaceIAMPolicyPatchDefault with default headers values
func NewWorkspaceIAMPolicyPatchDefault(code int) *WorkspaceIAMPolicyPatchDefault {
	return &WorkspaceIAMPolicyPatchDefault{
		_statusCode: code,
	}
}

/*
WorkspaceIAMPolicyPatchDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type WorkspaceIAMPolicyPatchDefault struct {
	_statusCode int

	Payload *models.GrpcGatewayRuntimeError
}

// Code gets the status code for the workspace i a m policy patch default response
func (o *WorkspaceIAMPolicyPatchDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this workspace i a m policy patch default response has a 2xx status code
func (o *WorkspaceIAMPolicyPatchDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this workspace i a m policy patch default response has a 3xx status code
func (o *WorkspaceIAMPolicyPatchDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this workspace i a m policy patch default response has a 4xx status code
func (o *WorkspaceIAMPolicyPatchDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this workspace i a m policy patch default response has a 5xx status code
func (o *WorkspaceIAMPolicyPatchDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this workspace i a m policy patch default response a status code equal to that given
func (o *WorkspaceIAMPolicyPatchDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *WorkspaceIAMPolicyPatchDefault) Error() string {
	return fmt.Sprintf("[PATCH /v1alpha1/workspaces:iam/{fullName.name}][%d] WorkspaceIAMPolicy_Patch default  %+v", o._statusCode, o.Payload)
}

func (o *WorkspaceIAMPolicyPatchDefault) String() string {
	return fmt.Sprintf("[PATCH /v1alpha1/workspaces:iam/{fullName.name}][%d] WorkspaceIAMPolicy_Patch default  %+v", o._statusCode, o.Payload)
}

func (o *WorkspaceIAMPolicyPatchDefault) GetPayload() *models.GrpcGatewayRuntimeError {
	return o.Payload
}

func (o *WorkspaceIAMPolicyPatchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GrpcGatewayRuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
