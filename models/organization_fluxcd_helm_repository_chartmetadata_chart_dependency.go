// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// OrganizationFluxcdHelmRepositoryChartmetadataChartDependency Dependency for the helm chart.
//
// swagger:model organization.fluxcd.helm.repository.chartmetadata.chart.Dependency
type OrganizationFluxcdHelmRepositoryChartmetadataChartDependency struct {

	// Alias to be used for the chart.
	Alias string `json:"alias,omitempty"`

	// Name of the chart.
	ChartName string `json:"chartName,omitempty"`

	// Version of the chart.
	ChartVersion string `json:"chartVersion,omitempty"`

	// Yaml path that resolves to a boolean, used for enabling/disabling charts.
	Condition string `json:"condition,omitempty"`

	// Holds the mapping of source values to parent key to be imported.
	ImportValues []string `json:"importValues"`

	// Repository URL.
	Repository string `json:"repository,omitempty"`

	// Tags can be used to group charts for enabling/disabling together.
	Tags []string `json:"tags"`
}

// Validate validates this organization fluxcd helm repository chartmetadata chart dependency
func (m *OrganizationFluxcdHelmRepositoryChartmetadataChartDependency) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this organization fluxcd helm repository chartmetadata chart dependency based on context it is used
func (m *OrganizationFluxcdHelmRepositoryChartmetadataChartDependency) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrganizationFluxcdHelmRepositoryChartmetadataChartDependency) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrganizationFluxcdHelmRepositoryChartmetadataChartDependency) UnmarshalBinary(b []byte) error {
	var res OrganizationFluxcdHelmRepositoryChartmetadataChartDependency
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
