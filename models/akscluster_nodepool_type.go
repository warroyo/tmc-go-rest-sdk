// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AksclusterNodepoolType The type options of nodepool.
//
//   - TYPE_UNSPECIFIED: Unspecified type.
//   - VIRTUAL_MACHINE_SCALE_SETS: Create a nodepool backed by a Virtual Machine Scale Set.
//   - AVAILABILITY_SET: Use of this is strongly discouraged.
//
// swagger:model akscluster.nodepool.Type
type AksclusterNodepoolType string

func NewAksclusterNodepoolType(value AksclusterNodepoolType) *AksclusterNodepoolType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AksclusterNodepoolType.
func (m AksclusterNodepoolType) Pointer() *AksclusterNodepoolType {
	return &m
}

const (

	// AksclusterNodepoolTypeTYPEUNSPECIFIED captures enum value "TYPE_UNSPECIFIED"
	AksclusterNodepoolTypeTYPEUNSPECIFIED AksclusterNodepoolType = "TYPE_UNSPECIFIED"

	// AksclusterNodepoolTypeVIRTUALMACHINESCALESETS captures enum value "VIRTUAL_MACHINE_SCALE_SETS"
	AksclusterNodepoolTypeVIRTUALMACHINESCALESETS AksclusterNodepoolType = "VIRTUAL_MACHINE_SCALE_SETS"

	// AksclusterNodepoolTypeAVAILABILITYSET captures enum value "AVAILABILITY_SET"
	AksclusterNodepoolTypeAVAILABILITYSET AksclusterNodepoolType = "AVAILABILITY_SET"
)

// for schema
var aksclusterNodepoolTypeEnum []interface{}

func init() {
	var res []AksclusterNodepoolType
	if err := json.Unmarshal([]byte(`["TYPE_UNSPECIFIED","VIRTUAL_MACHINE_SCALE_SETS","AVAILABILITY_SET"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		aksclusterNodepoolTypeEnum = append(aksclusterNodepoolTypeEnum, v)
	}
}

func (m AksclusterNodepoolType) validateAksclusterNodepoolTypeEnum(path, location string, value AksclusterNodepoolType) error {
	if err := validate.EnumCase(path, location, value, aksclusterNodepoolTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this akscluster nodepool type
func (m AksclusterNodepoolType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAksclusterNodepoolTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this akscluster nodepool type based on context it is used
func (m AksclusterNodepoolType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
