// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterDataprotectionBackupGatherBackupResourcesStatusPhase Phase of the ListBackupResources action in the associated cluster.
//
//   - PHASE_UNSPECIFIED: Default phase.
//   - PROCESSED: The internal backupResources state which specifies if the resources have been populated to the CR.
//   - FAILED: Failure state while processing the backup resources tar from velero or while uploading.
//
// swagger:model cluster.dataprotection.backup.GatherBackupResourcesStatus.Phase
type ClusterDataprotectionBackupGatherBackupResourcesStatusPhase string

func NewClusterDataprotectionBackupGatherBackupResourcesStatusPhase(value ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) *ClusterDataprotectionBackupGatherBackupResourcesStatusPhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterDataprotectionBackupGatherBackupResourcesStatusPhase.
func (m ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) Pointer() *ClusterDataprotectionBackupGatherBackupResourcesStatusPhase {
	return &m
}

const (

	// ClusterDataprotectionBackupGatherBackupResourcesStatusPhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	ClusterDataprotectionBackupGatherBackupResourcesStatusPhasePHASEUNSPECIFIED ClusterDataprotectionBackupGatherBackupResourcesStatusPhase = "PHASE_UNSPECIFIED"

	// ClusterDataprotectionBackupGatherBackupResourcesStatusPhasePROCESSED captures enum value "PROCESSED"
	ClusterDataprotectionBackupGatherBackupResourcesStatusPhasePROCESSED ClusterDataprotectionBackupGatherBackupResourcesStatusPhase = "PROCESSED"

	// ClusterDataprotectionBackupGatherBackupResourcesStatusPhaseFAILED captures enum value "FAILED"
	ClusterDataprotectionBackupGatherBackupResourcesStatusPhaseFAILED ClusterDataprotectionBackupGatherBackupResourcesStatusPhase = "FAILED"
)

// for schema
var clusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum []interface{}

func init() {
	var res []ClusterDataprotectionBackupGatherBackupResourcesStatusPhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","PROCESSED","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum = append(clusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum, v)
	}
}

func (m ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) validateClusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum(path, location string, value ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) error {
	if err := validate.EnumCase(path, location, value, clusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster dataprotection backup gather backup resources status phase
func (m ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterDataprotectionBackupGatherBackupResourcesStatusPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster dataprotection backup gather backup resources status phase based on context it is used
func (m ClusterDataprotectionBackupGatherBackupResourcesStatusPhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
