// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AntreaIoAntreaPkgApisCrdV1alpha1Observation Observation describes those from sender nodes or receiver nodes.
//
// swagger:model antrea_io.antrea.pkg.apis.crd.v1alpha1.Observation
type AntreaIoAntreaPkgApisCrdV1alpha1Observation struct {

	// Action is the action to the observation.
	Action string `json:"action,omitempty"`

	// Component is the observation component.
	Component string `json:"component,omitempty"`

	// ComponentInfo is the extension of Component field.
	ComponentInfo string `json:"componentInfo,omitempty"`

	// DstMAC is the destination MAC.
	DstMAC string `json:"dstMAC,omitempty"`

	// NetworkPolicy is the combination of Namespace and NetworkPolicyName.
	NetworkPolicy string `json:"networkPolicy,omitempty"`

	// Pod is the combination of Pod name and Pod Namespace.
	Pod string `json:"pod,omitempty"`

	// TranslatedDstIP is the translated destination IP.
	TranslatedDstIP string `json:"translatedDstIP,omitempty"`

	// TranslatedSrcIP is the translated source IP.
	TranslatedSrcIP string `json:"translatedSrcIP,omitempty"`

	// TTL is the observation TTL.
	TTL int32 `json:"ttl,omitempty"`

	// TunnelDstIP is the tunnel destination IP.
	TunnelDstIP string `json:"tunnelDstIP,omitempty"`
}

// Validate validates this antrea io antrea pkg apis crd v1alpha1 observation
func (m *AntreaIoAntreaPkgApisCrdV1alpha1Observation) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this antrea io antrea pkg apis crd v1alpha1 observation based on context it is used
func (m *AntreaIoAntreaPkgApisCrdV1alpha1Observation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1alpha1Observation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1alpha1Observation) UnmarshalBinary(b []byte) error {
	var res AntreaIoAntreaPkgApisCrdV1alpha1Observation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
