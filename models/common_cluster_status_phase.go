// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CommonClusterStatusPhase Phase of the cluster resource.
//
//   - PHASE_UNSPECIFIED: Unspecified phase.
//   - CREATING: Resource is being created.
//   - READY: Resource is in ready state.
//   - DELETING: Resource is being deleted.
//   - ERROR: Error in processing.
//   - UPGRADING: An upgrade is in progress.
//   - UPGRADE_FAILED: An upgrade has failed.
//   - UPDATING: The TanzuKubernetescluster of TKGS is in updating phase.
//
// swagger:model common.cluster.Status.Phase
type CommonClusterStatusPhase string

func NewCommonClusterStatusPhase(value CommonClusterStatusPhase) *CommonClusterStatusPhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CommonClusterStatusPhase.
func (m CommonClusterStatusPhase) Pointer() *CommonClusterStatusPhase {
	return &m
}

const (

	// CommonClusterStatusPhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	CommonClusterStatusPhasePHASEUNSPECIFIED CommonClusterStatusPhase = "PHASE_UNSPECIFIED"

	// CommonClusterStatusPhaseCREATING captures enum value "CREATING"
	CommonClusterStatusPhaseCREATING CommonClusterStatusPhase = "CREATING"

	// CommonClusterStatusPhaseREADY captures enum value "READY"
	CommonClusterStatusPhaseREADY CommonClusterStatusPhase = "READY"

	// CommonClusterStatusPhaseDELETING captures enum value "DELETING"
	CommonClusterStatusPhaseDELETING CommonClusterStatusPhase = "DELETING"

	// CommonClusterStatusPhaseERROR captures enum value "ERROR"
	CommonClusterStatusPhaseERROR CommonClusterStatusPhase = "ERROR"

	// CommonClusterStatusPhaseUPGRADING captures enum value "UPGRADING"
	CommonClusterStatusPhaseUPGRADING CommonClusterStatusPhase = "UPGRADING"

	// CommonClusterStatusPhaseUPGRADEFAILED captures enum value "UPGRADE_FAILED"
	CommonClusterStatusPhaseUPGRADEFAILED CommonClusterStatusPhase = "UPGRADE_FAILED"

	// CommonClusterStatusPhaseUPDATING captures enum value "UPDATING"
	CommonClusterStatusPhaseUPDATING CommonClusterStatusPhase = "UPDATING"
)

// for schema
var commonClusterStatusPhaseEnum []interface{}

func init() {
	var res []CommonClusterStatusPhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","CREATING","READY","DELETING","ERROR","UPGRADING","UPGRADE_FAILED","UPDATING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commonClusterStatusPhaseEnum = append(commonClusterStatusPhaseEnum, v)
	}
}

func (m CommonClusterStatusPhase) validateCommonClusterStatusPhaseEnum(path, location string, value CommonClusterStatusPhase) error {
	if err := validate.EnumCase(path, location, value, commonClusterStatusPhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this common cluster status phase
func (m CommonClusterStatusPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCommonClusterStatusPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this common cluster status phase based on context it is used
func (m CommonClusterStatusPhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
