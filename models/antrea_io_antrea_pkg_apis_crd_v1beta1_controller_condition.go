// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition antrea io antrea pkg apis crd v1beta1 controller condition
//
// swagger:model antrea_io.antrea.pkg.apis.crd.v1beta1.ControllerCondition
type AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition struct {

	// Mark certain type status, one of True, False, Unknown
	// Format: date-time
	LastHeartbeatTime strfmt.DateTime `json:"lastHeartbeatTime,omitempty"`

	// Brief reason
	Message string `json:"message,omitempty"`

	// The timestamp when AntreaControllerInfo is created/updated, ideally heartbeat interval is 60s
	Reason string `json:"reason,omitempty"`

	// One of the ControllerConditionType listed above, controllerHealthy
	Status string `json:"status,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this antrea io antrea pkg apis crd v1beta1 controller condition
func (m *AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastHeartbeatTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition) validateLastHeartbeatTime(formats strfmt.Registry) error {
	if swag.IsZero(m.LastHeartbeatTime) { // not required
		return nil
	}

	if err := validate.FormatOf("lastHeartbeatTime", "body", "date-time", m.LastHeartbeatTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this antrea io antrea pkg apis crd v1beta1 controller condition based on context it is used
func (m *AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition) UnmarshalBinary(b []byte) error {
	var res AntreaIoAntreaPkgApisCrdV1beta1ControllerCondition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
