// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// IamPermissionResource Resource Types.
//
//   - RESOURCE_UNSPECIFIED: Unkonwn.
//   - ORGANIZATION: Organization.
//   - MANAGEMENT_CLUSTER: Management cluster.
//   - PROVISIONER: Provisioner.
//   - CLUSTER_GROUP: Cluster group.
//   - CLUSTER: Cluster.
//   - WORKSPACE: Workspace.
//   - NAMESPACE: Namespace.
//
// swagger:model iam.permission.Resource
type IamPermissionResource string

func NewIamPermissionResource(value IamPermissionResource) *IamPermissionResource {
	return &value
}

// Pointer returns a pointer to a freshly-allocated IamPermissionResource.
func (m IamPermissionResource) Pointer() *IamPermissionResource {
	return &m
}

const (

	// IamPermissionResourceRESOURCEUNSPECIFIED captures enum value "RESOURCE_UNSPECIFIED"
	IamPermissionResourceRESOURCEUNSPECIFIED IamPermissionResource = "RESOURCE_UNSPECIFIED"

	// IamPermissionResourceORGANIZATION captures enum value "ORGANIZATION"
	IamPermissionResourceORGANIZATION IamPermissionResource = "ORGANIZATION"

	// IamPermissionResourceMANAGEMENTCLUSTER captures enum value "MANAGEMENT_CLUSTER"
	IamPermissionResourceMANAGEMENTCLUSTER IamPermissionResource = "MANAGEMENT_CLUSTER"

	// IamPermissionResourcePROVISIONER captures enum value "PROVISIONER"
	IamPermissionResourcePROVISIONER IamPermissionResource = "PROVISIONER"

	// IamPermissionResourceCLUSTERGROUP captures enum value "CLUSTER_GROUP"
	IamPermissionResourceCLUSTERGROUP IamPermissionResource = "CLUSTER_GROUP"

	// IamPermissionResourceCLUSTER captures enum value "CLUSTER"
	IamPermissionResourceCLUSTER IamPermissionResource = "CLUSTER"

	// IamPermissionResourceWORKSPACE captures enum value "WORKSPACE"
	IamPermissionResourceWORKSPACE IamPermissionResource = "WORKSPACE"

	// IamPermissionResourceNAMESPACE captures enum value "NAMESPACE"
	IamPermissionResourceNAMESPACE IamPermissionResource = "NAMESPACE"
)

// for schema
var iamPermissionResourceEnum []interface{}

func init() {
	var res []IamPermissionResource
	if err := json.Unmarshal([]byte(`["RESOURCE_UNSPECIFIED","ORGANIZATION","MANAGEMENT_CLUSTER","PROVISIONER","CLUSTER_GROUP","CLUSTER","WORKSPACE","NAMESPACE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		iamPermissionResourceEnum = append(iamPermissionResourceEnum, v)
	}
}

func (m IamPermissionResource) validateIamPermissionResourceEnum(path, location string, value IamPermissionResource) error {
	if err := validate.EnumCase(path, location, value, iamPermissionResourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this iam permission resource
func (m IamPermissionResource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIamPermissionResourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this iam permission resource based on context it is used
func (m IamPermissionResource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
