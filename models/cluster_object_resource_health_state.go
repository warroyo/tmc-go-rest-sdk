// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterObjectResourceHealthState State describes state of a resource health.
//
//   - STATE_UNSPECIFIED: STATE_UNSPECIFIED is the default state of health.
//   - HEALTHY: Resource is healthy.
//   - WARNING: Resource is in warning state.
//   - UNHEALTHY: Resource is unhealthy.
//   - DISCONNECTED: Resource is disconnected.
//   - UNSUPPORTED: Resource health check is unsupported.
//
// swagger:model cluster.object.ResourceHealth.State
type ClusterObjectResourceHealthState string

func NewClusterObjectResourceHealthState(value ClusterObjectResourceHealthState) *ClusterObjectResourceHealthState {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterObjectResourceHealthState.
func (m ClusterObjectResourceHealthState) Pointer() *ClusterObjectResourceHealthState {
	return &m
}

const (

	// ClusterObjectResourceHealthStateSTATEUNSPECIFIED captures enum value "STATE_UNSPECIFIED"
	ClusterObjectResourceHealthStateSTATEUNSPECIFIED ClusterObjectResourceHealthState = "STATE_UNSPECIFIED"

	// ClusterObjectResourceHealthStateHEALTHY captures enum value "HEALTHY"
	ClusterObjectResourceHealthStateHEALTHY ClusterObjectResourceHealthState = "HEALTHY"

	// ClusterObjectResourceHealthStateWARNING captures enum value "WARNING"
	ClusterObjectResourceHealthStateWARNING ClusterObjectResourceHealthState = "WARNING"

	// ClusterObjectResourceHealthStateUNHEALTHY captures enum value "UNHEALTHY"
	ClusterObjectResourceHealthStateUNHEALTHY ClusterObjectResourceHealthState = "UNHEALTHY"

	// ClusterObjectResourceHealthStateDISCONNECTED captures enum value "DISCONNECTED"
	ClusterObjectResourceHealthStateDISCONNECTED ClusterObjectResourceHealthState = "DISCONNECTED"

	// ClusterObjectResourceHealthStateUNSUPPORTED captures enum value "UNSUPPORTED"
	ClusterObjectResourceHealthStateUNSUPPORTED ClusterObjectResourceHealthState = "UNSUPPORTED"
)

// for schema
var clusterObjectResourceHealthStateEnum []interface{}

func init() {
	var res []ClusterObjectResourceHealthState
	if err := json.Unmarshal([]byte(`["STATE_UNSPECIFIED","HEALTHY","WARNING","UNHEALTHY","DISCONNECTED","UNSUPPORTED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterObjectResourceHealthStateEnum = append(clusterObjectResourceHealthStateEnum, v)
	}
}

func (m ClusterObjectResourceHealthState) validateClusterObjectResourceHealthStateEnum(path, location string, value ClusterObjectResourceHealthState) error {
	if err := validate.EnumCase(path, location, value, clusterObjectResourceHealthStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster object resource health state
func (m ClusterObjectResourceHealthState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterObjectResourceHealthStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster object resource health state based on context it is used
func (m ClusterObjectResourceHealthState) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
