// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CommonClusterAWSSubnetOptions AWS cloud provider specific subnet options.
//
// swagger:model common.cluster.AWSSubnetOptions
type CommonClusterAWSSubnetOptions struct {

	// Availability zone that the subnet is belonged to.
	AvailabilityZone string `json:"availabilityZone,omitempty"`

	// CIDR of the AWS subnet.
	Cidr string `json:"cidr,omitempty"`

	// Name of the AWS subnet.
	Name string `json:"name,omitempty"`

	// Public or private subnet.
	Public bool `json:"public,omitempty"`

	// ID of the AWS subnet.
	SubnetID string `json:"subnetId,omitempty"`
}

// Validate validates this common cluster a w s subnet options
func (m *CommonClusterAWSSubnetOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this common cluster a w s subnet options based on context it is used
func (m *CommonClusterAWSSubnetOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CommonClusterAWSSubnetOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CommonClusterAWSSubnetOptions) UnmarshalBinary(b []byte) error {
	var res CommonClusterAWSSubnetOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
