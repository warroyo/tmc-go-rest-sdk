// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterObjectStatusPhase The overall phase of the resource.
//
//   - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
//   - CREATING: Creating phase is set when the resource is being created.
//   - ATTACHING: Attaching phase is set when the resource is being attached.
//   - UPDATING: Updating phase is set when the resource is being updated.
//   - READY: Ready phase is set when the resource is successfully created/attached/updated.
//   - ERROR: Error phase is set when there was a failure while creating/attaching/updating the resource.
//
// swagger:model cluster.object.Status.Phase
type ClusterObjectStatusPhase string

func NewClusterObjectStatusPhase(value ClusterObjectStatusPhase) *ClusterObjectStatusPhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterObjectStatusPhase.
func (m ClusterObjectStatusPhase) Pointer() *ClusterObjectStatusPhase {
	return &m
}

const (

	// ClusterObjectStatusPhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	ClusterObjectStatusPhasePHASEUNSPECIFIED ClusterObjectStatusPhase = "PHASE_UNSPECIFIED"

	// ClusterObjectStatusPhaseCREATING captures enum value "CREATING"
	ClusterObjectStatusPhaseCREATING ClusterObjectStatusPhase = "CREATING"

	// ClusterObjectStatusPhaseATTACHING captures enum value "ATTACHING"
	ClusterObjectStatusPhaseATTACHING ClusterObjectStatusPhase = "ATTACHING"

	// ClusterObjectStatusPhaseUPDATING captures enum value "UPDATING"
	ClusterObjectStatusPhaseUPDATING ClusterObjectStatusPhase = "UPDATING"

	// ClusterObjectStatusPhaseREADY captures enum value "READY"
	ClusterObjectStatusPhaseREADY ClusterObjectStatusPhase = "READY"

	// ClusterObjectStatusPhaseERROR captures enum value "ERROR"
	ClusterObjectStatusPhaseERROR ClusterObjectStatusPhase = "ERROR"
)

// for schema
var clusterObjectStatusPhaseEnum []interface{}

func init() {
	var res []ClusterObjectStatusPhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","CREATING","ATTACHING","UPDATING","READY","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterObjectStatusPhaseEnum = append(clusterObjectStatusPhaseEnum, v)
	}
}

func (m ClusterObjectStatusPhase) validateClusterObjectStatusPhaseEnum(path, location string, value ClusterObjectStatusPhase) error {
	if err := validate.EnumCase(path, location, value, clusterObjectStatusPhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster object status phase
func (m ClusterObjectStatusPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterObjectStatusPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster object status phase based on context it is used
func (m ClusterObjectStatusPhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
