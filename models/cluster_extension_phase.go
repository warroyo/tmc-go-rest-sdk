// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterExtensionPhase Extension lifecycle phase.
//
//   - PHASE_UNSPECIFIED: Unspecified  phase.
//   - ROLLING_BACK: Rolling back phase.
//   - ROLLED_BACK: Rolled back phase.
//   - PROCESSING: Processing phase.
//   - PROCESSED: Processed phase.
//   - FAILED: Failed phase.
//   - PENDING: Pending phase.
//   - OUT_OF_SYNC: Out Of Sync phase.
//
// swagger:model cluster.extension.Phase
type ClusterExtensionPhase string

func NewClusterExtensionPhase(value ClusterExtensionPhase) *ClusterExtensionPhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterExtensionPhase.
func (m ClusterExtensionPhase) Pointer() *ClusterExtensionPhase {
	return &m
}

const (

	// ClusterExtensionPhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	ClusterExtensionPhasePHASEUNSPECIFIED ClusterExtensionPhase = "PHASE_UNSPECIFIED"

	// ClusterExtensionPhaseROLLINGBACK captures enum value "ROLLING_BACK"
	ClusterExtensionPhaseROLLINGBACK ClusterExtensionPhase = "ROLLING_BACK"

	// ClusterExtensionPhaseROLLEDBACK captures enum value "ROLLED_BACK"
	ClusterExtensionPhaseROLLEDBACK ClusterExtensionPhase = "ROLLED_BACK"

	// ClusterExtensionPhasePROCESSING captures enum value "PROCESSING"
	ClusterExtensionPhasePROCESSING ClusterExtensionPhase = "PROCESSING"

	// ClusterExtensionPhasePROCESSED captures enum value "PROCESSED"
	ClusterExtensionPhasePROCESSED ClusterExtensionPhase = "PROCESSED"

	// ClusterExtensionPhaseFAILED captures enum value "FAILED"
	ClusterExtensionPhaseFAILED ClusterExtensionPhase = "FAILED"

	// ClusterExtensionPhasePENDING captures enum value "PENDING"
	ClusterExtensionPhasePENDING ClusterExtensionPhase = "PENDING"

	// ClusterExtensionPhaseOUTOFSYNC captures enum value "OUT_OF_SYNC"
	ClusterExtensionPhaseOUTOFSYNC ClusterExtensionPhase = "OUT_OF_SYNC"
)

// for schema
var clusterExtensionPhaseEnum []interface{}

func init() {
	var res []ClusterExtensionPhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","ROLLING_BACK","ROLLED_BACK","PROCESSING","PROCESSED","FAILED","PENDING","OUT_OF_SYNC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterExtensionPhaseEnum = append(clusterExtensionPhaseEnum, v)
	}
}

func (m ClusterExtensionPhase) validateClusterExtensionPhaseEnum(path, location string, value ClusterExtensionPhase) error {
	if err := validate.EnumCase(path, location, value, clusterExtensionPhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster extension phase
func (m ClusterExtensionPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterExtensionPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster extension phase based on context it is used
func (m ClusterExtensionPhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
