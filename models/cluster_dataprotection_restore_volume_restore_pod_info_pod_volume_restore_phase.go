// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase The possible phases pod volume restore can be in.
//
//   - PHASE_UNSPECIFIED: Default phase.
//   - IN_PROGRESS: The pod volume restore is in progress.
//   - COMPLETED: The pod volume restore has completed successfully.
//   - FAILED: The pod volume restore has completed unsuccessfully.
//
// swagger:model cluster.dataprotection.restore.VolumeRestorePodInfo.PodVolumeRestorePhase
type ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase string

func NewClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase(value ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) *ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase.
func (m ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) Pointer() *ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase {
	return &m
}

const (

	// ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhasePHASEUNSPECIFIED ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase = "PHASE_UNSPECIFIED"

	// ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseINPROGRESS captures enum value "IN_PROGRESS"
	ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseINPROGRESS ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase = "IN_PROGRESS"

	// ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseCOMPLETED captures enum value "COMPLETED"
	ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseCOMPLETED ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase = "COMPLETED"

	// ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseFAILED captures enum value "FAILED"
	ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseFAILED ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase = "FAILED"
)

// for schema
var clusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum []interface{}

func init() {
	var res []ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","IN_PROGRESS","COMPLETED","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum = append(clusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum, v)
	}
}

func (m ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) validateClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum(path, location string, value ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) error {
	if err := validate.EnumCase(path, location, value, clusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster dataprotection restore volume restore pod info pod volume restore phase
func (m ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster dataprotection restore volume restore pod info pod volume restore phase based on context it is used
func (m ClusterDataprotectionRestoreVolumeRestorePodInfoPodVolumeRestorePhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
