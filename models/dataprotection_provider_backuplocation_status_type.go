// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DataprotectionProviderBackuplocationStatusType Type of the backup location.
//
//   - TYPE_UNSPECIFIED: Type Unspecified is the default type for a backup location.
//   - MANAGED: Type MANAGED indicates backup location(bucket) is managed by TMC.
//   - UNMANAGED: UNMANAGED indicates backup location(bucket) is not managed by TMC.
//
// swagger:model dataprotection.provider.backuplocation.Status.Type
type DataprotectionProviderBackuplocationStatusType string

func NewDataprotectionProviderBackuplocationStatusType(value DataprotectionProviderBackuplocationStatusType) *DataprotectionProviderBackuplocationStatusType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DataprotectionProviderBackuplocationStatusType.
func (m DataprotectionProviderBackuplocationStatusType) Pointer() *DataprotectionProviderBackuplocationStatusType {
	return &m
}

const (

	// DataprotectionProviderBackuplocationStatusTypeTYPEUNSPECIFIED captures enum value "TYPE_UNSPECIFIED"
	DataprotectionProviderBackuplocationStatusTypeTYPEUNSPECIFIED DataprotectionProviderBackuplocationStatusType = "TYPE_UNSPECIFIED"

	// DataprotectionProviderBackuplocationStatusTypeMANAGED captures enum value "MANAGED"
	DataprotectionProviderBackuplocationStatusTypeMANAGED DataprotectionProviderBackuplocationStatusType = "MANAGED"

	// DataprotectionProviderBackuplocationStatusTypeUNMANAGED captures enum value "UNMANAGED"
	DataprotectionProviderBackuplocationStatusTypeUNMANAGED DataprotectionProviderBackuplocationStatusType = "UNMANAGED"
)

// for schema
var dataprotectionProviderBackuplocationStatusTypeEnum []interface{}

func init() {
	var res []DataprotectionProviderBackuplocationStatusType
	if err := json.Unmarshal([]byte(`["TYPE_UNSPECIFIED","MANAGED","UNMANAGED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dataprotectionProviderBackuplocationStatusTypeEnum = append(dataprotectionProviderBackuplocationStatusTypeEnum, v)
	}
}

func (m DataprotectionProviderBackuplocationStatusType) validateDataprotectionProviderBackuplocationStatusTypeEnum(path, location string, value DataprotectionProviderBackuplocationStatusType) error {
	if err := validate.EnumCase(path, location, value, dataprotectionProviderBackuplocationStatusTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this dataprotection provider backuplocation status type
func (m DataprotectionProviderBackuplocationStatusType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDataprotectionProviderBackuplocationStatusTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this dataprotection provider backuplocation status type based on context it is used
func (m DataprotectionProviderBackuplocationStatusType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
