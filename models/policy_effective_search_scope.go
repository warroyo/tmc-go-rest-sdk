// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PolicyEffectiveSearchScope Scope to search by, any fields left empty will be considered all (*).
//
// swagger:model policy.effective.SearchScope
type PolicyEffectiveSearchScope struct {

	// Scope search to the specified name; supports globbing; default (*).
	Name string `json:"name,omitempty"`

	// Filter by phase of the policy; supports globbing; default (*).
	Phase string `json:"phase,omitempty"`

	// Filter by RID of target resource; supports globbing; default (*).
	TargetResourceRid string `json:"targetResourceRid,omitempty"`

	// Filter by UID of target resource; supports globbing; default (*).
	TargetResourceUID string `json:"targetResourceUid,omitempty"`
}

// Validate validates this policy effective search scope
func (m *PolicyEffectiveSearchScope) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this policy effective search scope based on context it is used
func (m *PolicyEffectiveSearchScope) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PolicyEffectiveSearchScope) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PolicyEffectiveSearchScope) UnmarshalBinary(b []byte) error {
	var res PolicyEffectiveSearchScope
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
