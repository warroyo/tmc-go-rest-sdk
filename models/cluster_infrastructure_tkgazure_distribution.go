// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClusterInfrastructureTkgazureDistribution Distribution of the Azure cluster.
//
// swagger:model cluster.infrastructure.tkgazure.Distribution
type ClusterInfrastructureTkgazureDistribution struct {

	// Arch of the OS used for the cluster.
	OsArch string `json:"osArch,omitempty"`

	// Name of the OS used for the cluster.
	OsName string `json:"osName,omitempty"`

	// Version of the OS used for the cluster.
	OsVersion string `json:"osVersion,omitempty"`

	// Region of the cluster.
	Region string `json:"region,omitempty"`

	// Resource group to use in Azure. If unspecified, uses cluster name as resource group name.
	ResourceGroup string `json:"resourceGroup,omitempty"`

	// Version of the cluster.
	Version string `json:"version,omitempty"`
}

// Validate validates this cluster infrastructure tkgazure distribution
func (m *ClusterInfrastructureTkgazureDistribution) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cluster infrastructure tkgazure distribution based on context it is used
func (m *ClusterInfrastructureTkgazureDistribution) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterInfrastructureTkgazureDistribution) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterInfrastructureTkgazureDistribution) UnmarshalBinary(b []byte) error {
	var res ClusterInfrastructureTkgazureDistribution
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
