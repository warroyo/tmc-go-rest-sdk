// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterDataprotectionRestoreSpecExistingResourcePolicyType Helps specify restore behaviour for kubernetes resources.
//
//   - POLICY_TYPE_NONE: Do not overwrite the resource in cluster with the one in backup whether changed/unchanged.
//   - POLICY_TYPE_UPDATE: Attempt a patch on the changed resources.
//
// swagger:model cluster.dataprotection.restore.Spec.ExistingResourcePolicyType
type ClusterDataprotectionRestoreSpecExistingResourcePolicyType string

func NewClusterDataprotectionRestoreSpecExistingResourcePolicyType(value ClusterDataprotectionRestoreSpecExistingResourcePolicyType) *ClusterDataprotectionRestoreSpecExistingResourcePolicyType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterDataprotectionRestoreSpecExistingResourcePolicyType.
func (m ClusterDataprotectionRestoreSpecExistingResourcePolicyType) Pointer() *ClusterDataprotectionRestoreSpecExistingResourcePolicyType {
	return &m
}

const (

	// ClusterDataprotectionRestoreSpecExistingResourcePolicyTypePOLICYTYPENONE captures enum value "POLICY_TYPE_NONE"
	ClusterDataprotectionRestoreSpecExistingResourcePolicyTypePOLICYTYPENONE ClusterDataprotectionRestoreSpecExistingResourcePolicyType = "POLICY_TYPE_NONE"

	// ClusterDataprotectionRestoreSpecExistingResourcePolicyTypePOLICYTYPEUPDATE captures enum value "POLICY_TYPE_UPDATE"
	ClusterDataprotectionRestoreSpecExistingResourcePolicyTypePOLICYTYPEUPDATE ClusterDataprotectionRestoreSpecExistingResourcePolicyType = "POLICY_TYPE_UPDATE"
)

// for schema
var clusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum []interface{}

func init() {
	var res []ClusterDataprotectionRestoreSpecExistingResourcePolicyType
	if err := json.Unmarshal([]byte(`["POLICY_TYPE_NONE","POLICY_TYPE_UPDATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum = append(clusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum, v)
	}
}

func (m ClusterDataprotectionRestoreSpecExistingResourcePolicyType) validateClusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum(path, location string, value ClusterDataprotectionRestoreSpecExistingResourcePolicyType) error {
	if err := validate.EnumCase(path, location, value, clusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster dataprotection restore spec existing resource policy type
func (m ClusterDataprotectionRestoreSpecExistingResourcePolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterDataprotectionRestoreSpecExistingResourcePolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster dataprotection restore spec existing resource policy type based on context it is used
func (m ClusterDataprotectionRestoreSpecExistingResourcePolicyType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
