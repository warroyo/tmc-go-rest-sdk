// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AksclusterAzureKeyvaultSecretsProviderAddonConfig The azure-keyvault-secrets-provider addon config.
//
// swagger:model akscluster.AzureKeyvaultSecretsProviderAddonConfig
type AksclusterAzureKeyvaultSecretsProviderAddonConfig struct {

	// Whether to enable secret rotation for the azure-keyvault-secrets-provider addon.
	EnableSecretRotation bool `json:"enableSecretRotation,omitempty"`

	// Whether the azure-keyvault-secrets-provider addon is enabled or not.
	Enabled bool `json:"enabled,omitempty"`

	// The interval at which to rotate the secrets in the azure-keyvault-secrets-provider addon.
	RotationPoolInterval string `json:"rotationPoolInterval,omitempty"`
}

// Validate validates this akscluster azure keyvault secrets provider addon config
func (m *AksclusterAzureKeyvaultSecretsProviderAddonConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this akscluster azure keyvault secrets provider addon config based on context it is used
func (m *AksclusterAzureKeyvaultSecretsProviderAddonConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AksclusterAzureKeyvaultSecretsProviderAddonConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AksclusterAzureKeyvaultSecretsProviderAddonConfig) UnmarshalBinary(b []byte) error {
	var res AksclusterAzureKeyvaultSecretsProviderAddonConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
