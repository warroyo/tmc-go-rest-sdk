// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterDataprotectionSnapshotlocationSpecVolumeProvider Available volume provider for snapshot location.
//
//   - VOLUME_PROVIDER_UNSPECIFIED: Unspecified volume provider.
//   - AWS: AWS.
//   - AZURE: Azure.
//
// swagger:model cluster.dataprotection.snapshotlocation.Spec.VolumeProvider
type ClusterDataprotectionSnapshotlocationSpecVolumeProvider string

func NewClusterDataprotectionSnapshotlocationSpecVolumeProvider(value ClusterDataprotectionSnapshotlocationSpecVolumeProvider) *ClusterDataprotectionSnapshotlocationSpecVolumeProvider {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterDataprotectionSnapshotlocationSpecVolumeProvider.
func (m ClusterDataprotectionSnapshotlocationSpecVolumeProvider) Pointer() *ClusterDataprotectionSnapshotlocationSpecVolumeProvider {
	return &m
}

const (

	// ClusterDataprotectionSnapshotlocationSpecVolumeProviderVOLUMEPROVIDERUNSPECIFIED captures enum value "VOLUME_PROVIDER_UNSPECIFIED"
	ClusterDataprotectionSnapshotlocationSpecVolumeProviderVOLUMEPROVIDERUNSPECIFIED ClusterDataprotectionSnapshotlocationSpecVolumeProvider = "VOLUME_PROVIDER_UNSPECIFIED"

	// ClusterDataprotectionSnapshotlocationSpecVolumeProviderAWS captures enum value "AWS"
	ClusterDataprotectionSnapshotlocationSpecVolumeProviderAWS ClusterDataprotectionSnapshotlocationSpecVolumeProvider = "AWS"

	// ClusterDataprotectionSnapshotlocationSpecVolumeProviderAZURE captures enum value "AZURE"
	ClusterDataprotectionSnapshotlocationSpecVolumeProviderAZURE ClusterDataprotectionSnapshotlocationSpecVolumeProvider = "AZURE"
)

// for schema
var clusterDataprotectionSnapshotlocationSpecVolumeProviderEnum []interface{}

func init() {
	var res []ClusterDataprotectionSnapshotlocationSpecVolumeProvider
	if err := json.Unmarshal([]byte(`["VOLUME_PROVIDER_UNSPECIFIED","AWS","AZURE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterDataprotectionSnapshotlocationSpecVolumeProviderEnum = append(clusterDataprotectionSnapshotlocationSpecVolumeProviderEnum, v)
	}
}

func (m ClusterDataprotectionSnapshotlocationSpecVolumeProvider) validateClusterDataprotectionSnapshotlocationSpecVolumeProviderEnum(path, location string, value ClusterDataprotectionSnapshotlocationSpecVolumeProvider) error {
	if err := validate.EnumCase(path, location, value, clusterDataprotectionSnapshotlocationSpecVolumeProviderEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster dataprotection snapshotlocation spec volume provider
func (m ClusterDataprotectionSnapshotlocationSpecVolumeProvider) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterDataprotectionSnapshotlocationSpecVolumeProviderEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster dataprotection snapshotlocation spec volume provider based on context it is used
func (m ClusterDataprotectionSnapshotlocationSpecVolumeProvider) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
