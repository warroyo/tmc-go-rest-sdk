// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AksclusterAADConfig Configs for Azure Active Directory integration.
//
// swagger:model akscluster.AADConfig
type AksclusterAADConfig struct {

	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIds []string `json:"adminGroupObjectIds"`

	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRbac bool `json:"enableAzureRbac,omitempty"`

	// Whether to enable managed AAD.
	Managed bool `json:"managed,omitempty"`

	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID string `json:"tenantId,omitempty"`
}

// Validate validates this akscluster a a d config
func (m *AksclusterAADConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this akscluster a a d config based on context it is used
func (m *AksclusterAADConfig) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AksclusterAADConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AksclusterAADConfig) UnmarshalBinary(b []byte) error {
	var res AksclusterAADConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
