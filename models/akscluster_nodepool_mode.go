// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AksclusterNodepoolMode The mode type options of the cluster nodepool
//
// - MODE_UNSPECIFIED: Unspecified mode.
//   - USER: User nodepools are primarily for hosting your application pods.
//   - SYSTEM: System agent pools are primarily for hosting critical system pods such as CoreDNS and metrics-server.
//
// swagger:model akscluster.nodepool.Mode
type AksclusterNodepoolMode string

func NewAksclusterNodepoolMode(value AksclusterNodepoolMode) *AksclusterNodepoolMode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AksclusterNodepoolMode.
func (m AksclusterNodepoolMode) Pointer() *AksclusterNodepoolMode {
	return &m
}

const (

	// AksclusterNodepoolModeMODEUNSPECIFIED captures enum value "MODE_UNSPECIFIED"
	AksclusterNodepoolModeMODEUNSPECIFIED AksclusterNodepoolMode = "MODE_UNSPECIFIED"

	// AksclusterNodepoolModeUSER captures enum value "USER"
	AksclusterNodepoolModeUSER AksclusterNodepoolMode = "USER"

	// AksclusterNodepoolModeSYSTEM captures enum value "SYSTEM"
	AksclusterNodepoolModeSYSTEM AksclusterNodepoolMode = "SYSTEM"
)

// for schema
var aksclusterNodepoolModeEnum []interface{}

func init() {
	var res []AksclusterNodepoolMode
	if err := json.Unmarshal([]byte(`["MODE_UNSPECIFIED","USER","SYSTEM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		aksclusterNodepoolModeEnum = append(aksclusterNodepoolModeEnum, v)
	}
}

func (m AksclusterNodepoolMode) validateAksclusterNodepoolModeEnum(path, location string, value AksclusterNodepoolMode) error {
	if err := validate.EnumCase(path, location, value, aksclusterNodepoolModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this akscluster nodepool mode
func (m AksclusterNodepoolMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAksclusterNodepoolModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this akscluster nodepool mode based on context it is used
func (m AksclusterNodepoolMode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
