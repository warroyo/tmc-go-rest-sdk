// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AntreaIoAntreaPkgApisCrdV1alpha1IPHeader IPHeader describes spec of an IPv4 header.
//
// swagger:model antrea_io.antrea.pkg.apis.crd.v1alpha1.IPHeader
type AntreaIoAntreaPkgApisCrdV1alpha1IPHeader struct {

	// Flags is the flags for IP.
	Flags int32 `json:"flags,omitempty"`

	// Protocol is the IP protocol.
	Protocol int32 `json:"protocol,omitempty"`

	// SrcIP is the source IP.
	SrcIP string `json:"srcIP,omitempty"`

	// TTL is the IP TTL.
	TTL int32 `json:"ttl,omitempty"`
}

// Validate validates this antrea io antrea pkg apis crd v1alpha1 IP header
func (m *AntreaIoAntreaPkgApisCrdV1alpha1IPHeader) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this antrea io antrea pkg apis crd v1alpha1 IP header based on context it is used
func (m *AntreaIoAntreaPkgApisCrdV1alpha1IPHeader) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1alpha1IPHeader) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AntreaIoAntreaPkgApisCrdV1alpha1IPHeader) UnmarshalBinary(b []byte) error {
	var res AntreaIoAntreaPkgApisCrdV1alpha1IPHeader
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
