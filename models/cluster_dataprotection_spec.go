// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ClusterDataprotectionSpec The spec collects all the options for installing backup and restore solution into a Kubernetes cluster.
//
// swagger:model cluster.dataprotection.Spec
type ClusterDataprotectionSpec struct {

	// List of Backup Locations to install in the cluster.
	BackupLocationNames []string `json:"backupLocationNames"`

	// A flag to indicate whether to skip installation of restic server (https://github.com/restic/restic).
	// Otherwise, restic would be enabled by default as part of Data Protection installation.
	DisableRestic bool `json:"disableRestic,omitempty"`

	// A flag to indicate whether to backup all the supported API Group versions of a resource on the cluster.
	EnableAllAPIGroupVersionsBackup bool `json:"enableAllApiGroupVersionsBackup,omitempty"`

	// A flag to indicate whether to install CSI snapshotting related capabilities.
	EnableCsiSnapshots bool `json:"enableCsiSnapshots,omitempty"`
}

// Validate validates this cluster dataprotection spec
func (m *ClusterDataprotectionSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this cluster dataprotection spec based on context it is used
func (m *ClusterDataprotectionSpec) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ClusterDataprotectionSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClusterDataprotectionSpec) UnmarshalBinary(b []byte) error {
	var res ClusterDataprotectionSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
