// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ClusterDataprotectionBackupStatusPhase The phase for the current backup.
//
//   - PHASE_UNSPECIFIED: Phase_unspecified is the default phase.
//   - PENDING: Pending phase is set when the backup object is being processed by the service (TMC).
//   - CREATING: Creating phase is set when backup is being created on the cluster.
//   - NEW: The phase when backup has been created but not yet processed by velero.
//   - FAILEDVALIDATION: The phase when backup has failed the velero controller's validations and therefore will not run.
//   - INPROGRESS: The phase when backup is currently executing by velero.
//   - COMPLETED: The phase when backup has run successfully without errors.
//   - FAILED: The phase when backup ran but encountered an error that prevented it from completing successfully.
//   - PENDING_DELETE: Pending delete is set when the object deletion is being processed by the service.
//   - DELETING: The phase when backup and all its associated data are being deleted.
//   - PARTIALLY_FAILED: The phase when the backup has run to completion but encountered errors backing up individual items.
//
// swagger:model cluster.dataprotection.backup.Status.Phase
type ClusterDataprotectionBackupStatusPhase string

func NewClusterDataprotectionBackupStatusPhase(value ClusterDataprotectionBackupStatusPhase) *ClusterDataprotectionBackupStatusPhase {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ClusterDataprotectionBackupStatusPhase.
func (m ClusterDataprotectionBackupStatusPhase) Pointer() *ClusterDataprotectionBackupStatusPhase {
	return &m
}

const (

	// ClusterDataprotectionBackupStatusPhasePHASEUNSPECIFIED captures enum value "PHASE_UNSPECIFIED"
	ClusterDataprotectionBackupStatusPhasePHASEUNSPECIFIED ClusterDataprotectionBackupStatusPhase = "PHASE_UNSPECIFIED"

	// ClusterDataprotectionBackupStatusPhasePENDING captures enum value "PENDING"
	ClusterDataprotectionBackupStatusPhasePENDING ClusterDataprotectionBackupStatusPhase = "PENDING"

	// ClusterDataprotectionBackupStatusPhaseCREATING captures enum value "CREATING"
	ClusterDataprotectionBackupStatusPhaseCREATING ClusterDataprotectionBackupStatusPhase = "CREATING"

	// ClusterDataprotectionBackupStatusPhaseNEW captures enum value "NEW"
	ClusterDataprotectionBackupStatusPhaseNEW ClusterDataprotectionBackupStatusPhase = "NEW"

	// ClusterDataprotectionBackupStatusPhaseFAILEDVALIDATION captures enum value "FAILEDVALIDATION"
	ClusterDataprotectionBackupStatusPhaseFAILEDVALIDATION ClusterDataprotectionBackupStatusPhase = "FAILEDVALIDATION"

	// ClusterDataprotectionBackupStatusPhaseINPROGRESS captures enum value "INPROGRESS"
	ClusterDataprotectionBackupStatusPhaseINPROGRESS ClusterDataprotectionBackupStatusPhase = "INPROGRESS"

	// ClusterDataprotectionBackupStatusPhaseCOMPLETED captures enum value "COMPLETED"
	ClusterDataprotectionBackupStatusPhaseCOMPLETED ClusterDataprotectionBackupStatusPhase = "COMPLETED"

	// ClusterDataprotectionBackupStatusPhaseFAILED captures enum value "FAILED"
	ClusterDataprotectionBackupStatusPhaseFAILED ClusterDataprotectionBackupStatusPhase = "FAILED"

	// ClusterDataprotectionBackupStatusPhasePENDINGDELETE captures enum value "PENDING_DELETE"
	ClusterDataprotectionBackupStatusPhasePENDINGDELETE ClusterDataprotectionBackupStatusPhase = "PENDING_DELETE"

	// ClusterDataprotectionBackupStatusPhaseDELETING captures enum value "DELETING"
	ClusterDataprotectionBackupStatusPhaseDELETING ClusterDataprotectionBackupStatusPhase = "DELETING"

	// ClusterDataprotectionBackupStatusPhasePARTIALLYFAILED captures enum value "PARTIALLY_FAILED"
	ClusterDataprotectionBackupStatusPhasePARTIALLYFAILED ClusterDataprotectionBackupStatusPhase = "PARTIALLY_FAILED"
)

// for schema
var clusterDataprotectionBackupStatusPhaseEnum []interface{}

func init() {
	var res []ClusterDataprotectionBackupStatusPhase
	if err := json.Unmarshal([]byte(`["PHASE_UNSPECIFIED","PENDING","CREATING","NEW","FAILEDVALIDATION","INPROGRESS","COMPLETED","FAILED","PENDING_DELETE","DELETING","PARTIALLY_FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clusterDataprotectionBackupStatusPhaseEnum = append(clusterDataprotectionBackupStatusPhaseEnum, v)
	}
}

func (m ClusterDataprotectionBackupStatusPhase) validateClusterDataprotectionBackupStatusPhaseEnum(path, location string, value ClusterDataprotectionBackupStatusPhase) error {
	if err := validate.EnumCase(path, location, value, clusterDataprotectionBackupStatusPhaseEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this cluster dataprotection backup status phase
func (m ClusterDataprotectionBackupStatusPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClusterDataprotectionBackupStatusPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this cluster dataprotection backup status phase based on context it is used
func (m ClusterDataprotectionBackupStatusPhase) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
